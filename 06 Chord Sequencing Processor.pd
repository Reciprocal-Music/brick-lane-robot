#N canvas 4 23 1236 616 10;
#X obj 37 186 list prepend;
#X obj 178 428 list length;
#X obj 37 450 mod \$1;
#X obj 37 428 f;
#X obj 62 428 + 1;
#X obj 37 386 r clap;
#X obj 37 488 + 1;
#X msg 105 167 1;
#X msg 183 386 0;
#X obj 37 548 send \$1;
#X obj 86 548 symbol;
#X obj 37 102 r chordSeqList;
#X obj 87 428 r chordSeqList;
#X obj 37 236 s chordSequence;
#X obj 709 523 r repeats;
#X obj 689 491 ==;
#X obj 714 491 sel 1;
#X obj 659 523 f;
#X obj 684 523 + 1;
#X obj 659 543 ==;
#X obj 683 543 sel 1;
#X obj 659 563 s sectionChange;
#X obj 80 386 r sectionChange;
#X obj 757 428 r sectionChange;
#X obj 49 167 loadbang;
#X msg 674 428 1;
#X obj 702 428 loadbang;
#X text 36 21 Chord table mapper;
#X text 35 302 Chord trigger distributor;
#X obj 61 488 s repeater1;
#X obj 178 449 s repeater2;
#X obj 689 470 r repeater1;
#X obj 762 470 r repeater2;
#X text 657 315 Section repeater;
#X obj 129 548 r selSection;
#X text 679 50 This module handles the processing of the chord sequence
information.;
#X text 37 53 this module takes the chord sequence of the chosen section
\, and maps it to the chordSequence table.;
#X text 160 233 <-- maps the list to the chordSequence table \, starting
at the index number specified above.;
#X text 35 333 This module receives clap triggers \, and distributes
them to the correct chord in the chosen section \, as specified in
the 'section settings' module above right.;
#X text 221 386 <-- resets the counter when the section is changed
;
#X text 259 426 <-- sets the counter to the length of the chord sequence
\, so it can easily loop around. This means you can take in chord sequences
of any length.;
#X text 214 546 <-- this takes the name of the section currently selected
\, and routes the counter to that section.;
#X text 140 488 <-- this is so you can refer to chords in the sequence
starting from 1 \, instead of 0 \, which feels a bit more natural.
;
#X text 859 428 <-- resets the counter when the section changes;
#X text 657 347 This module takes in the '# of repeats' messages from
the 'section manager' module \, and ensures that each section plays
back that number of times before sending a message to change the section.
;
#X text 157 167 <-- tells the table at which index number it should
add your list. it's been set to 1 \, so you can refer to chords in
your sequence starting from 1 \, instead of 0 \, which feels a bit
more natural.;
#X text 157 100 <-- receives a message from the 'section manager' module.
A 'chord sequence message' will be sent through whenever a new section
is triggered by the 'section sequencing processor'.;
#X text 843 472 <-- tests whether the section has finished by comparing
the current number in the sequence to the size of the sequence;
#X text 782 525 <-- sends a 'section change' message only once the
current section has been played (repeated) the designated number of
times. The number of repeats is set in the 'section manager' module.
;
#X text 655 152 It works in conjunction with the 'section manager'
\, the 'set sequence' \, and the 'section sequencing processor' \,
to ensure the correct trigger is sent to the correct section in the
'chord data bank'.;
#X text 655 96 It takes in information from the 'section manager' module
\, and processes it to trigger the correct chord in the correct section.
;
#X text 655 219 At base \, it lays the foundations for a simple 'section
manager' module \, where you can easily place a section's identifier
\, default number of repeats \, and chord progression into boxes to
be processed here.;
#X connect 0 0 13 0;
#X connect 1 0 2 1;
#X connect 1 0 30 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X connect 6 0 9 0;
#X connect 6 0 29 0;
#X connect 7 0 0 1;
#X connect 8 0 3 1;
#X connect 10 0 9 1;
#X connect 11 0 0 0;
#X connect 12 0 1 0;
#X connect 14 0 19 1;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 17 1;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 22 0 8 0;
#X connect 23 0 25 0;
#X connect 24 0 7 0;
#X connect 25 0 17 1;
#X connect 26 0 25 0;
#X connect 31 0 15 0;
#X connect 32 0 15 1;
#X connect 34 0 10 0;
