#N canvas 85 231 898 493 10;
#N canvas 36 103 927 476 frequencyGenerator 0;
#X obj 36 262 mtof;
#X obj 167 264 mtof;
#X obj 202 264 mtof;
#X obj 237 264 mtof;
#X obj 272 264 mtof;
#X obj 167 285 +~;
#X obj 202 286 +~;
#X obj 237 285 +~;
#X obj 272 285 +~;
#X text 25 20 FREQUENCY GENERATOR;
#X obj 305 264 receive~ chordModulation;
#X obj 36 105 r playChord;
#X obj 180 321 s~ freq2;
#X obj 236 321 s~ freq3;
#X obj 291 321 s~ freq4;
#X obj 346 321 s~ freq5;
#X obj 36 155 unpack 0 0 0 0 0 0;
#X obj 36 367 vline~;
#X obj 91 262 mtof;
#X obj 36 399 s~ freq1;
#X obj 91 303 int;
#X obj 91 283 del 1;
#N canvas 216 107 512 283 chordModulator 0;
#X obj 25 116 osc~;
#X obj 35 142 *~;
#X obj 25 71 loadbang;
#X text 52 93 speed;
#X msg 25 94 4;
#X text 127 93 amount;
#X obj 35 211 s~ chordModulation;
#X obj 61 189 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 35 189 *~;
#X obj 61 168 r clap;
#X obj 79 189 loadbang;
#X text 21 30 CHORD MODULATOR (automated);
#X text 151 175 <-- switches modulation on/off with each clap;
#X msg 97 94 2;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 4 0;
#X connect 2 0 13 0;
#X connect 4 0 0 0;
#X connect 7 0 8 1;
#X connect 8 0 6 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 13 0 1 1;
#X restore 595 217 pd chordModulator;
#N canvas 33 47 1180 731 transposer 0;
#X obj 31 65 r triggerTranspose;
#X obj 40 453 int;
#X obj 103 474 +;
#X obj 82 434 sel 1;
#X msg 82 453 1;
#X obj 126 414 ==;
#X obj 126 433 sel 1;
#X msg 126 452 -1;
#X text 108 101 <-- ignores the first trigger \, observes all others
;
#X obj 531 105 unpack s 0 0;
#X obj 491 444 random;
#X obj 524 393 -;
#X text 554 392 <-- sets the range;
#X obj 491 463 change;
#X obj 455 444 until;
#X obj 473 464 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 491 489 +;
#X text 646 489 <-- starts random numbers from bottom of range;
#X obj 565 126 s transposerLowValue;
#X obj 600 146 s transposerHiValue;
#X obj 524 349 r transposerHiValue;
#X obj 539 369 r transposerLowValue;
#X obj 516 489 r transposerLowValue;
#X text 538 456 <-- outputs random number that is always different
from last;
#X text 155 65 <-- trigger received from trigger distributor in song
sequencer module;
#X obj 31 112 spigot;
#X msg 74 112 1;
#X obj 31 92 t b b;
#X obj 141 393 r transposerHiValue;
#X obj 56 371 r transposerLowValue;
#X text 451 259 generate random transpose value within given range
;
#X obj 531 74 inlet;
#X obj 40 340 spigot;
#X obj 455 324 spigot;
#X obj 40 502 s autoTranposeValue;
#X obj 491 517 s randomTransposeValue;
#X text 38 250 automatically bounce from lowest number in range to
highest number \, then back down again \, in a loop;
#X obj 40 473 t 0 0;
#X text 38 228 AUTO MODE;
#X text 451 235 RANDOM MODE;
#X obj 31 142 s transposerTrigger;
#X obj 40 289 r transposerTrigger;
#X obj 144 320 r transposerMode;
#X obj 89 320 sel auto;
#X msg 134 341 0;
#X msg 89 341 1;
#X obj 567 303 r transposerMode;
#X msg 545 324 0;
#X msg 500 324 1;
#X obj 500 303 sel random;
#X obj 455 282 r transposerTrigger;
#X obj 531 167 s transposerMode;
#X text 27 37 TRIGGER;
#X text 528 46 ROUTE MESSAGES;
#X obj 46 603 r transposerLowValue;
#X obj 58 635 r autoTranposeValue;
#X obj 90 655 r randomTransposeValue;
#X text 796 35 TRANSPOSER;
#X text 42 569 OUTPUT;
#X msg 1067 182 auto -3 2;
#X text 857 261 Each mode is described in its respective module.;
#X text 796 65 Takes in compound messages and outputs tranpose amount
accordingly \, each time a trigger is received at the end of the set
sequence.;
#X obj 46 692 s transposeAmount;
#X obj 82 415 ==;
#X obj 11 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 524 423 + 1;
#X text 553 424 <-- ensures the top number of the range is included
;
#X text 1043 148 Example messages:;
#X text 180 602 <-- always initialises the patch with the low value
for the first cycle;
#X text 237 639 <-- optionally receives one of these two for each subsequent
cycle;
#X msg 1067 202 random -5 1;
#X text 790 108 There are three arguments: mode \, low value \, and
high value. The mode can be 'auto' \, 'random' \, or 'single'.;
#X msg 1067 222 single 1;
#X connect 0 0 27 0;
#X connect 1 0 37 0;
#X connect 2 0 1 1;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 2 1;
#X connect 9 0 51 0;
#X connect 9 1 18 0;
#X connect 9 2 19 0;
#X connect 10 0 13 0;
#X connect 11 0 65 0;
#X connect 13 0 15 0;
#X connect 13 0 16 0;
#X connect 14 0 10 0;
#X connect 15 0 14 1;
#X connect 16 0 35 0;
#X connect 20 0 11 0;
#X connect 21 0 11 1;
#X connect 22 0 16 1;
#X connect 25 0 40 0;
#X connect 26 0 25 1;
#X connect 27 0 26 0;
#X connect 27 1 25 0;
#X connect 28 0 5 1;
#X connect 29 0 1 1;
#X connect 29 0 63 1;
#X connect 31 0 9 0;
#X connect 32 0 1 0;
#X connect 33 0 14 0;
#X connect 37 0 2 0;
#X connect 37 0 34 0;
#X connect 37 1 5 0;
#X connect 37 1 63 0;
#X connect 41 0 32 0;
#X connect 42 0 43 0;
#X connect 43 0 45 0;
#X connect 43 1 44 0;
#X connect 44 0 32 1;
#X connect 45 0 32 1;
#X connect 46 0 49 0;
#X connect 47 0 33 1;
#X connect 48 0 33 1;
#X connect 49 0 48 0;
#X connect 49 1 47 0;
#X connect 50 0 33 0;
#X connect 54 0 62 0;
#X connect 55 0 62 0;
#X connect 56 0 62 0;
#X connect 63 0 3 0;
#X connect 64 0 27 0;
#X connect 65 0 10 1;
#X restore 595 172 pd transposer;
#N canvas 0 23 442 248 osc5damper 0;
#X obj 20 94 inlet;
#X obj 20 121 sel 0;
#X msg 58 121 0 10;
#X msg 96 121 1 10;
#X obj 76 152 vline~;
#X obj 76 176 s~ osc5ramp;
#X text 15 22 Oscillator 5 damper;
#X text 15 46 Prevents clicks when transitioning between an empty '0'
note and a number note;
#X text 157 176 <-- received at polyOscs;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X restore 235 176 pd osc5damper;
#X text 326 176 <-- prevents clicks;
#X text 712 217 <-- set chord modulation;
#X text 401 321 <-- chord frequencies out;
#X text 98 399 <-- bass frequency out;
#X text 115 105 <-- from chordData module;
#X text 24 46 Receives chord data messages and converts them into individual
frequencies;
#X msg 91 322 \$1 350 250;
#X obj 305 225 r transposeAmount;
#X obj 36 226 +;
#X obj 91 226 +;
#X obj 167 226 +;
#X obj 202 226 +;
#X obj 238 226 +;
#X obj 272 226 +;
#X text 659 143 <-- set transpose mode and range/amount;
#X obj 595 117 loadbang;
#X msg 595 144 single 0;
#X connect 0 0 17 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 12 0;
#X connect 6 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 10 0 5 1;
#X connect 10 0 6 1;
#X connect 10 0 7 1;
#X connect 10 0 8 1;
#X connect 11 0 16 0;
#X connect 16 0 33 0;
#X connect 16 1 34 0;
#X connect 16 2 35 0;
#X connect 16 3 36 0;
#X connect 16 4 37 0;
#X connect 16 5 24 0;
#X connect 16 5 38 0;
#X connect 17 0 19 0;
#X connect 18 0 20 1;
#X connect 18 0 21 0;
#X connect 20 0 31 0;
#X connect 21 0 20 0;
#X connect 31 0 17 0;
#X connect 32 0 38 1;
#X connect 32 0 37 1;
#X connect 32 0 36 1;
#X connect 32 0 35 1;
#X connect 32 0 34 1;
#X connect 32 0 33 1;
#X connect 33 0 0 0;
#X connect 34 0 18 0;
#X connect 35 0 1 0;
#X connect 36 0 2 0;
#X connect 37 0 3 0;
#X connect 38 0 4 0;
#X connect 40 0 41 0;
#X connect 41 0 23 0;
#X restore 497 130 pd frequencyGenerator;
#N canvas 35 23 624 755 clapDetector 0;
#X text 9 9 CLAP DETECTOR;
#X obj 15 361 abs;
#X obj 15 298 -;
#X obj 126 655 + 1;
#X msg 72 654 1;
#X obj 72 711 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 63 362 abs;
#X obj 63 298 -;
#X obj 111 362 abs;
#X obj 111 298 -;
#X obj 72 525 +;
#X obj 72 565 > 1;
#X obj 72 585 select 1;
#X obj 130 413 loadbang;
#X obj 15 469 >;
#X obj 63 469 >;
#X obj 111 469 >;
#X obj 101 655 int;
#X obj 72 615 del 250;
#X obj 72 676 sel 1;
#X obj 30 121 r controlValue1;
#X obj 78 140 r controlValue2;
#X obj 126 159 r controlValue3;
#X obj 90 711 s clap;
#X text 10 38 Detects claps \, distinguishing them from shaking or
swinging using a "range-covered-per-10ms" system. Also uses a '2-out-of-3'
system \, reqiring 2 or more axes to trigger it.;
#X msg 186 413 0.2;
#X obj 149 197 loadbang;
#X obj 15 249 pipe;
#X obj 63 249 pipe;
#X obj 111 249 pipe;
#X msg 204 197 8;
#X text 187 123 <-- accelerometer signals are converted into control
values before being sent to this module;
#X text 151 297 Calculates the difference between the current value
and the delayed (earlier) value \, thereby seeing what 'distance' has
been travelled in that time;
#X text 153 361 Ensures that the difference is always expressed as
a positive number;
#X text 150 465 Checks whether the difference (or in other words \,
the distance travelled in the specified time) is greater than a certain
value;
#X text 105 526 Adds the 3 evaluations (1s or 0s) together;
#X text 107 566 Tests whether the number received is greater than 1
;
#X text 166 651 Debounce system: it will only reset the float with
a '1' after the amount of time specified by the 'delay' object. This
prevents multiple bangs occuring from just one clap.;
#X text 237 198 <-- ARGUMENT 2 - test window (keep around 8ms);
#X text 225 412 <-- ARGUMENT 1 - threshold (keep below 0.45 \, 0.2
works well);
#X text 126 615 <-- ARGUMENT 3 - debounce time (keep around 250ms)
;
#X text 153 248 Delays the stream of numbers coming through it by the
number of milliseconds specified;
#X text 20 94 AXIS 1 HAS BEEN DISCONNECTED DUE TO MALFUNCTIONING;
#X connect 1 0 14 0;
#X connect 2 0 1 0;
#X connect 3 0 17 1;
#X connect 4 0 17 1;
#X connect 5 0 23 0;
#X connect 6 0 15 0;
#X connect 7 0 6 0;
#X connect 8 0 16 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 17 0;
#X connect 12 0 18 0;
#X connect 13 0 25 0;
#X connect 15 0 10 0;
#X connect 16 0 10 1;
#X connect 17 0 3 0;
#X connect 17 0 19 0;
#X connect 18 0 4 0;
#X connect 19 0 5 0;
#X connect 20 0 2 1;
#X connect 20 0 27 0;
#X connect 21 0 7 1;
#X connect 21 0 28 0;
#X connect 22 0 9 1;
#X connect 22 0 29 0;
#X connect 25 0 15 1;
#X connect 25 0 16 1;
#X connect 26 0 30 0;
#X connect 27 0 2 0;
#X connect 28 0 7 0;
#X connect 29 0 9 0;
#X connect 30 0 27 1;
#X connect 30 0 28 1;
#X connect 30 0 29 1;
#X restore 27 152 pd clapDetector;
#N canvas 111 23 1051 658 adcExpander 0;
#X obj 11 213 clip~ 0 1;
#X obj 71 213 clip~ 0 1;
#X obj 131 213 clip~ 0 1;
#X obj 11 87 adc~ 3;
#X obj 71 87 adc~ 4;
#X obj 131 87 adc~ 5;
#X obj 33 298 dac~ 27;
#X obj 93 298 dac~ 28;
#X obj 154 298 dac~ 29;
#X obj 184 417 sig~;
#X msg 215 417 1;
#X obj 243 417 r adcBypass;
#X obj 131 126 -~ 0.36;
#X obj 131 165 *~ 3.7;
#X obj 11 126 -~ 0.33;
#X obj 11 165 *~ 3.03;
#X obj 71 126 -~ 0.33;
#X obj 71 165 *~ 5.88;
#X text 9 9 ADC EXPANDER;
#X obj 11 506 s~ bigAdc1;
#X obj 79 506 s~ bigAdc2;
#X obj 147 506 s~ bigAdc3;
#X text 224 264 TESTING AND DIAGNOSTIC TOOLS;
#X text 206 297 <--oscilloscope (connect to clip~);
#X text 321 416 <-- bypass switch (receives from testing tool);
#X text 317 457 <-- auto wobble (receives from testing tool);
#X text 225 508 <-- expanded adc signals out;
#X text 344 348 Axis 1: Red;
#X text 338 364 Axis 2: Blue;
#X text 332 380 Axis 3: Green;
#X text 609 72 Axis 1 (adc~ 3): responds to handshake \, sideways movements
;
#X text 621 95 Axis 2 (adc~ 4): responds to stabbing \, forward movements
;
#X text 603 118 Axis 3 (adc~ 5): responds to flat palm \, up + down
movements;
#X text 795 161 Guide values for each axis:;
#X text 879 29 GUIDE TO AXES;
#X text 212 327 Oscilloscope colours in Bela IDE:;
#X text 186 126 <-- brings resting value to 0;
#X text 180 165 <-- brings range between 0-1;
#X text 201 212 <-- ensures signal never exceeds range;
#X text 184 87 <-- accelerometer axes in;
#X text 9 36 Expands the signals from the accelerometer to make them
usable for controlling filters;
#X text 788 484 Hand upside down 0 \; Palm flat on table 0.5 \; Aggressive/forced
wobble 0-1;
#X text 782 527 Gentle/relaxed/stable wobble:;
#X text 806 548 0.83 max hi-point \; 0.73 commonest hi-point \; 0.69
min hi-point \; 0.32 max low-point \; 0.29 commonest low-point \; 0.22
min low-point;
#X text 705 457 Axis 3 (main wobble axis) after expansion:;
#X text 693 204 Axis 1 (before expansion) \; resting sideways (thumb
up) 0.48 \; gentle handshake up/down highest value 0.66 \; " lowest
value 0.33 \; " range: 0.33 (multiply by 3.03);
#X text 729 281 Axis 2 (before expansion) \; resting sideways (thumb
up) 0.39 \; gentle stab forward highest value 0.5 \; " lowest value
0.33 \; " range: 0.17 (multiply by 5.88);
#X text 711 358 Axis 3 (before expansion) \; Flat on table 0.49 \;
Gentle up/down wobble highest value 0.36 \; " lowest value 0.36 \;
" range 0.27 (multiply by 3.7);
#X obj 223 457 r~ fakeWobble;
#X connect 0 0 19 0;
#X connect 1 0 20 0;
#X connect 1 0 7 0;
#X connect 2 0 21 0;
#X connect 2 0 8 0;
#X connect 3 0 14 0;
#X connect 4 0 16 0;
#X connect 5 0 12 0;
#X connect 9 0 19 0;
#X connect 9 0 20 0;
#X connect 9 0 21 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 2 0;
#X connect 14 0 15 0;
#X connect 15 0 0 0;
#X connect 16 0 17 0;
#X connect 17 0 1 0;
#X connect 48 0 21 0;
#X connect 48 0 20 0;
#X connect 48 0 19 0;
#X restore 27 181 pd adcExpander;
#N canvas 327 135 453 248 patchInitialiser 0;
#X obj 30 145 loadbang;
#X obj 159 194 s init1;
#X obj 94 194 s init2;
#X obj 30 194 s init3;
#X text 28 18 MASTER PATCH INITIALISER;
#X text 27 43 Sends out three bangs in succession \, to initialise
different parts of the patch in the correct order;
#X text 27 83 It's necessary to use this \, instead of simple 'loadbang'
objects everywhere \, because some objects need to be initialised before
others.;
#X obj 30 164 t b b b;
#X connect 0 0 7 0;
#X connect 7 0 3 0;
#X connect 7 1 2 0;
#X connect 7 2 1 0;
#X restore 27 35 pd patchInitialiser;
#N canvas 240 321 400 259 adcToNumber 0;
#X obj 20 84 loadbang;
#X obj 20 154 snapshot~;
#X obj 80 154 snapshot~;
#X obj 20 115 metro 1;
#X obj 68 115 adc~ 3 4 5;
#X obj 140 154 snapshot~;
#X text 18 15 ADC to NUMBER CONVERTER;
#X obj 20 193 s controlValue1;
#X obj 118 193 s controlValue2;
#X obj 215 193 s controlValue3;
#X text 18 39 Converts the ADC signals into streams of numberrs \,
for use by the clap detector;
#X connect 0 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 8 0;
#X connect 3 0 1 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 4 2 5 0;
#X connect 5 0 9 0;
#X restore 27 132 pd adcToNumber;
#X text 124 130 <-- convert accelerometer signal into discrete numbers
;
#X text 134 152 <-- detect claps;
#X text 151 34 <-- initialise the patch;
#X text 634 130 <-- convert data into frequencies;
#X text 24 93 SENSOR PROCESSING;
#X text 494 92 CREATE SOUNDS;
#X text 123 181 <-- expand accelerometer signals for use by filters
;
#N canvas 46 267 508 321 masterMix 0;
#X obj 22 134 +~;
#X obj 22 270 s~ output;
#X text 20 18 MASTER MIX;
#X obj 131 108 *~;
#X obj 22 108 *~;
#X obj 50 108 r~ pauseBass;
#X obj 159 108 r~ boostChords;
#X text 255 107 <-- for bassPauser;
#X obj 22 230 *~;
#X obj 95 186 loadbang;
#X obj 37 209 vline~;
#X msg 67 186 1 1;
#X obj 37 166 r clapToFinish;
#X msg 37 186 0 1;
#X text 160 186 <-- clap to finish (for single-performance mode);
#X obj 22 68 r~ rollOffBass;
#X text 246 69 <-- final bass and chord signals;
#X obj 131 69 r~ chordMixDelayed;
#X connect 0 0 8 0;
#X connect 3 0 0 1;
#X connect 4 0 0 0;
#X connect 5 0 4 1;
#X connect 6 0 3 1;
#X connect 8 0 1 0;
#X connect 9 0 11 0;
#X connect 10 0 8 1;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X connect 15 0 4 0;
#X connect 17 0 3 0;
#X restore 497 280 pd masterMix;
#N canvas 246 140 418 505 masterOutput 0;
#X obj 28 205 dac~;
#X obj 28 65 lop~ 20000;
#X text 26 13 Master output;
#X obj 28 45 r~ output;
#X obj 28 85 hip~ 50;
#N canvas 0 23 1144 740 compressor 0;
#X obj 252 670 outlet~;
#X obj 252 536 *~;
#X obj 252 644 *~;
#N canvas 0 22 450 300 delWrite 0;
#X obj 68 80 delwrite~ \$0-comp 500;
#X obj 68 39 inlet~;
#X obj 68 156 outlet~;
#X connect 1 0 0 0;
#X restore 85 319 pd delWrite;
#X obj 481 423 dbtorms;
#X obj 533 394 /;
#X obj 533 363 swap 1;
#X obj 586 370 /;
#X obj 586 348 swap 1000;
#X obj 267 496 lop~;
#X obj 267 441 clip~ 0 1;
#X obj 481 445 s \$0-thresh;
#X obj 533 416 s \$0-ratio;
#X obj 267 619 line~;
#X obj 267 598 pack f 5;
#X obj 267 574 r \$0-gain;
#X obj 638 327 s \$0-gain;
#N canvas 0 22 872 621 rms 0;
#X obj 257 107 env~ 512;
#X obj 257 245 -~;
#X obj 257 293 *~;
#X obj 257 345 +~;
#X obj 257 385 /~;
#X obj 378 221 +~ 0;
#X obj 272 220 r \$0-thresh;
#X obj 272 318 r \$0-thresh;
#X obj 272 269 r \$0-ratio;
#X obj 257 34 inlet~;
#X obj 257 407 outlet~;
#X obj 373 37 inlet;
#X obj 373 59 switch~;
#X obj 257 135 dbtorms~;
#X text 221 74 Input;
#X text 231 136 RMS;
#X text 424 59 turn DSP on/off for this sub-patch;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 10 0;
#X connect 5 0 4 1;
#X connect 6 0 1 1;
#X connect 7 0 3 1;
#X connect 8 0 2 1;
#X connect 9 0 0 0;
#X connect 11 0 12 0;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 267 318 pd rms;
#N canvas 0 22 859 606 peak 0;
#X obj 244 134 abs~;
#X obj 244 243 -~;
#X obj 244 291 *~;
#X obj 244 343 +~;
#X obj 244 383 /~;
#X obj 365 219 +~ 0;
#X obj 259 218 r \$0-thresh;
#X obj 259 316 r \$0-thresh;
#X obj 259 267 r \$0-ratio;
#X obj 244 49 inlet~;
#X obj 244 405 outlet~;
#X obj 470 125 inlet;
#X obj 470 147 switch~;
#X text 206 99 Input;
#X text 208 135 Peak;
#X text 521 148 turn DSP on/off for this sub-patch;
#X connect 0 0 1 0;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 10 0;
#X connect 5 0 4 1;
#X connect 6 0 1 1;
#X connect 7 0 3 1;
#X connect 8 0 2 1;
#X connect 9 0 0 0;
#X connect 11 0 12 0;
#X restore 315 318 pd peak;
#X obj 300 260 == 0;
#X obj 300 215 t f f;
#X obj 85 62 inlet~;
#X obj 300 191 r \$0-rmspeak;
#X obj 691 301 s \$0-rmspeak;
#X obj 743 277 s \$0-lookahead;
#X obj 142 371 r \$0-lookahead;
#X obj 481 253 route threshold ratio response gain rmspeak lookahead
;
#X obj 481 65 inlet control;
#X obj 512 126 loadbang;
#X obj 481 200 t a a;
#X obj 508 228 s \$0-dump;
#X obj 481 388 + 100;
#X obj 638 281 + 100;
#X obj 638 303 dbtorms;
#X obj 288 474 r \$0-response;
#X obj 586 392 s \$0-response;
#X obj 450 670 outlet;
#X obj 450 605 r \$0-dump;
#N canvas 368 180 728 661 dump 0;
#X obj 124 52 inlet;
#X obj 125 625 outlet;
#X msg 187 486 threshold \$1;
#X msg 239 436 ratio \$1;
#X msg 294 385 response \$1;
#X msg 344 336 gain \$1;
#X msg 397 284 rmspeak \$1;
#X msg 449 235 lookahead \$1;
#X obj 187 141 route threshold ratio response gain rmspeak lookahead
;
#X obj 166 509 list;
#X obj 218 460 list;
#X obj 273 409 list;
#X obj 323 359 list;
#X obj 376 304 list;
#X obj 428 257 list;
#X obj 585 219 t b b b b b b;
#X obj 502 171 sel dump;
#X obj 428 548 list trim;
#X connect 0 0 1 0;
#X connect 0 0 8 0;
#X connect 2 0 9 1;
#X connect 3 0 10 1;
#X connect 4 0 11 1;
#X connect 5 0 12 1;
#X connect 6 0 13 1;
#X connect 7 0 14 1;
#X connect 8 0 2 0;
#X connect 8 1 3 0;
#X connect 8 2 4 0;
#X connect 8 3 5 0;
#X connect 8 4 6 0;
#X connect 8 5 7 0;
#X connect 8 6 16 0;
#X connect 9 0 17 0;
#X connect 10 0 17 0;
#X connect 11 0 17 0;
#X connect 12 0 17 0;
#X connect 13 0 17 0;
#X connect 14 0 17 0;
#X connect 15 0 9 0;
#X connect 15 1 10 0;
#X connect 15 2 11 0;
#X connect 15 3 12 0;
#X connect 15 4 13 0;
#X connect 15 5 14 0;
#X connect 16 0 15 0;
#X connect 17 0 1 0;
#X restore 450 627 pd dump;
#X msg 512 155 threshold -2 \, ratio 2 \, response 40 \, gain 0 \,
rmspeak 0 \, lookahead 0;
#N canvas 0 22 450 300 delRead 0;
#X obj 68 41 inlet~;
#X obj 133 155 outlet~;
#X obj 133 42 inlet lookAhead;
#X obj 133 116 delread~ \$0-comp 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 85 395 pd delRead;
#X text 129 62 Input;
#X text 25 317 delwrite~;
#X text 51 350 dymmy;
#X text 50 362 cable;
#X text 31 395 delread~;
#X text 141 350 Lookahead in ms;
#X text 334 439 Clip signal;
#X text 298 495 Attack/release using LPF;
#X text 277 535 Gain Control;
#X text 318 341 Gain computation;
#X text 318 355 RMS/Peak;
#X text 330 574 Make-up gain;
#X text 339 215 RMS/Peak;
#X text 339 228 selector;
#X text 498 658 Dump/send controls;
#X text 498 671 for UI object;
#X text 569 128 initialise controls;
#X text 538 211 send controls to UI;
#X text 479 467 Convert dB FS;
#X text 479 478 to Pd dB scale;
#X text 479 490 and then linear;
#X text 479 501 amplitude.;
#X text 561 433 inverse of ratio;
#X text 637 410 convert ms to frequency;
#X text 657 346 convert dBFS scale to Pd dB scale;
#X text 707 320 RMS/peak selection;
#X text 781 294 lookahead value in ms;
#X text 757 236 route incoming data;
#X text 810 48 Varun Nair;
#X text 810 61 2013;
#X text 811 74 re-sounding.com;
#X text 812 87 @ntkeep;
#X text 31 15 Compressor downloaded from designingsound.org;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 40 0;
#X connect 4 0 11 0;
#X connect 5 0 12 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 7 0 35 0;
#X connect 8 0 7 0;
#X connect 8 1 7 1;
#X connect 9 0 1 1;
#X connect 10 0 9 0;
#X connect 13 0 2 1;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 17 0 10 0;
#X connect 18 0 10 0;
#X connect 19 0 17 1;
#X connect 20 0 19 0;
#X connect 20 1 18 1;
#X connect 21 0 3 0;
#X connect 21 0 17 0;
#X connect 21 0 18 0;
#X connect 22 0 20 0;
#X connect 25 0 40 1;
#X connect 26 0 31 0;
#X connect 26 1 6 0;
#X connect 26 2 8 0;
#X connect 26 3 32 0;
#X connect 26 4 23 0;
#X connect 26 5 24 0;
#X connect 27 0 29 0;
#X connect 28 0 39 0;
#X connect 29 0 26 0;
#X connect 29 1 30 0;
#X connect 31 0 4 0;
#X connect 32 0 33 0;
#X connect 33 0 16 0;
#X connect 34 0 9 1;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 39 0 29 0;
#X connect 40 0 1 0;
#X restore 93 458 pd compressor;
#X obj 207 204 metro 1;
#X obj 207 255 snapshot~;
#X obj 207 181 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 231 182 <-- on/off;
#X obj 219 281 max;
#X floatatom 245 281 5 0 0 0 - - -, f 5;
#X obj 218 303 min;
#X floatatom 244 303 5 0 0 0 - - -, f 5;
#X msg 217 325 0;
#X obj 28 127 s~ boostedOutput;
#X obj 28 183 r~ boostedOutput;
#X obj 217 229 r~ boostedOutput;
#X text 200 153 Test for clipping;
#X text 291 283 <-- maximum;
#X text 190 458 <-- try this later;
#X text 291 305 <-- minimum;
#X obj 28 106 *~ 4;
#X text 249 325 <-- reset;
#X connect 1 0 4 0;
#X connect 3 0 1 0;
#X connect 4 0 22 0;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 7 0 12 0;
#X connect 8 0 6 0;
#X connect 10 0 11 0;
#X connect 11 0 10 1;
#X connect 12 0 13 0;
#X connect 13 0 12 1;
#X connect 14 0 10 1;
#X connect 14 0 12 1;
#X connect 16 0 0 0;
#X connect 17 0 7 0;
#X connect 22 0 15 0;
#X restore 497 308 pd masterOutput;
#X text 588 278 <-- mix all sounds;
#X text 496 246 MIX SOUNDS;
#N canvas 253 23 807 743 songSelector 1;
#X msg 80 339 1;
#X msg 80 362 2;
#X obj 28 71 r init1;
#X msg 480 152 0;
#N canvas 129 23 701 694 songTemplate 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X text 86 27 SONG TITLE;
#X obj 43 201 r TMP;
#X text 84 171 section 1;
#X obj 43 359 r TMP;
#X obj 43 517 r TMP;
#X text 84 329 section 2;
#X text 84 487 section 3;
#X obj 43 378 sel 2;
#X obj 43 536 sel 3;
#X text 256 112 <-- set song identifier and sequence of sections here
;
#X text 250 200 <-- set sequence of chords in each individual section
here \, and the number of times that chord progression should repeat
within the section;
#X text 236 271 <-- input the actual chord data here (up to 12 chords
per section);
#X text 165 27 <-- song title here;
#X text 77 359 <-------------------------------;
#X text 77 378 <-------------------------------;
#X text 279 362 don't forget to change the [r] objects to the song
identifier \, and the [sel] objects to the section number;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 \; c3 set
0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 \; c3 set
0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0;
#X msg 87 565 \; c1 set 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 \; c3 set
0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0;
#X msg 87 103 \; identifier TMP \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 517 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 23 0;
#X connect 3 0 24 0;
#X connect 3 0 20 0;
#X connect 5 0 3 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 11 0 25 0;
#X connect 11 0 21 0;
#X connect 12 0 26 0;
#X connect 12 0 22 0;
#X restore 516 153 pd songTemplate;
#X obj 28 448 r init1;
#X msg 80 385 3;
#X msg 80 448 4;
#X msg 80 471 5;
#X msg 80 494 6;
#X msg 80 517 7;
#X msg 80 540 8;
#X msg 80 563 9;
#X msg 80 627 10;
#X msg 80 650 11;
#X msg 80 673 12;
#X msg 80 696 13;
#X obj 281 412 r init1;
#X obj 560 339 r init1;
#X msg 612 339 -1;
#X msg 612 362 -2;
#X msg 612 385 -3;
#X msg 612 408 -4;
#X msg 612 431 -5;
#X obj 429 152 r init1;
#X text 25 276 song library;
#N canvas 329 23 523 577 middleClassDaydream 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 250 sel 1;
#X text 84 201 section 1;
#X text 84 399 section 2;
#X obj 43 448 sel 2;
#X obj 43 231 r MCD;
#X obj 43 429 r MCD;
#X text 86 27 MIDDLE CLASS DAYDREAM;
#X msg 86 309 \; c1 set 40 35 52 55 59 64 \; c2 set 45 40 57 61 64
69 \; c3 set 36 43 52 55 60 64 \; c4 set 41 41 57 60 64 69;
#X msg 86 486 \; c1 set 40 47 55 59 62 66 \; c2 set 45 40 55 59 61
64 \; c3 set 36 43 52 55 59 62 \; c4 set 41 41 57 60 63 67;
#X msg 86 428 \; chordSequence 4 4 1 2 3 4 4 1 2 3 4 4 1 2 3 4 4 1
2 3 4 4 \; repeats 0;
#X msg 87 102 \; identifier MCD \; sectionSequence 1 2 1 2 \; wobbleSequence
0 0 1 0 \; verbSequence 0 0 1 0 \; delaySequence 0 0 1 0;
#X msg 85 230 \; chordSequence 1 2 3 4 4 1 2 3 4 4 1 2 3 4 4 1 2 3
\; repeats 0 \; wobblePattern 1 1 1 0 0 \; verbPattern 0 0 0 0 2 \;
delayPattern 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 3 0 10 0;
#X connect 6 0 12 0;
#X connect 6 0 11 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 117 339 pd middleClassDaydream;
#N canvas 110 23 430 627 sevenEleven 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 240 sel 1;
#X text 84 191 section 1;
#X text 84 389 section 2;
#X obj 43 438 sel 2;
#X text 86 27 SEVEN ELEVEN;
#X obj 43 221 r SVE;
#X obj 43 419 r SVE;
#X msg 87 299 \; c1 set 40 47 52 55 59 0 \; c2 set 40 35 55 59 64 0
\; c3 set 45 40 54 60 64 0 \; c4 set 45 33 60 64 66 0;
#X msg 87 499 \; c1 set 43 38 59 62 66 0 \; c2 set 36 43 52 55 59 0
\; c3 set 37 44 52 56 59 0 \; c4 set 42 36 57 60 64 0 \; c5 set 35
42 54 57 63 0;
#X msg 86 419 \; chordSequence 1 2 2 3 3 2 2 4 5 \; repeats 0 \; wobblePattern
0 \; verbPattern 1 0 0 0 0 0 0 0 0;
#X msg 87 103 \; identifier SVE \; sectionSequence 1 2 1 2 \; wobbleSequence
0 0 1 0 \; verbSequence 0 1 0 1 \; delaySequence 0 0 1 0;
#X msg 86 221 \; chordSequence 1 2 1 2 3 4 1 2 1 2 1 2 3 4 1 \; repeats
0 \; wobblePattern 1 \; delayPattern 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1
;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 3 0 10 0;
#X connect 6 0 12 0;
#X connect 6 0 11 0;
#X connect 8 0 3 0;
#X connect 9 0 6 0;
#X restore 117 362 pd sevenEleven;
#N canvas 229 40 510 666 longLongSummertime 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 240 sel 1;
#X text 84 191 section 1;
#X text 84 401 section 2;
#X obj 43 450 sel 2;
#X text 86 27 LONG LONG SUMMERTIME;
#X obj 43 221 r LLS;
#X obj 43 431 r LLS;
#X msg 87 289 \; c1 set 40 47 52 55 59 0 \; c2 set 40 47 52 55 59 64
\; c3 set 45 40 54 60 64 66 \; c4 set 35 42 54 57 63 66 \; c5 set 42
36 54 57 60 64;
#X msg 87 489 \; c1 set 40 47 55 59 62 66 \; c2 set 39 46 54 58 61
66 \; c3 set 38 45 54 57 61 66 \; c4 set 37 44 52 56 59 68 \; c5 set
36 43 52 55 59 67 \; c6 set 36 43 52 55 59 64 \; c7 set 35 42 54 57
64 0 \; c8 set 35 42 54 57 63 0;
#X msg 87 431 \; chordSequence 1 2 3 4 5 6 7 8 \; repeats 1 \; wobblePattern
1;
#X msg 87 103 \; identifier LLS \; sectionSequence 1 2 1 2 \; wobbleSequence
0 0 1 0 \; delaySequence 0 0 1 0;
#X msg 88 220 \; chordSequence 1 2 3 4 5 4 5 4 1 2 3 4 5 4 \; repeats
0 \; wobblePattern 1 \; delayPattern 0 0 0 0 0 0 0 0 1 1 1 1 1 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 3 0 10 0;
#X connect 6 0 12 0;
#X connect 6 0 11 0;
#X connect 8 0 3 0;
#X connect 9 0 6 0;
#X restore 117 385 pd longLongSummertime;
#N canvas 72 23 600 731 dontYouWorry 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X text 86 27 DON'T YOU WORRY;
#X obj 43 525 r DYW;
#X msg 87 572 \; c1 set 40 35 55 59 64 0 \; c2 set 40 35 52 55 59 64
\; c3 set 43 38 53 57 64 0 \; c4 set 43 43 53 57 62 0 \; c5 set 43
43 53 57 60 0 \; c6 set 36 43 52 55 59 0 \; c7 set 42 42 52 58 61 0
\; c8 set 47 47 54 57 63 0 \; c9 set 40 28 52 54 55 59 \; c10 set 40
28 52 55 59 64;
#X msg 87 220 \; chordSequence 1 2 3 4 5 1 2 3 4 5 1 2 7 8 9 10 11
12 \; repeats 0;
#X msg 87 334 \; c1 set 36 43 55 59 64 0 \; c2 set 35 42 54 57 62 0
\; c3 set 39 47 55 59 63 0 \; c4 set 40 40 55 59 64 0 \; c5 set 37
37 57 61 64 0 \; c6 set 38 38 54 57 62 0 \; c7 set 38 45 59 62 66 0
\; c8 set 37 44 59 64 67 0 \; c9 set 36 43 55 59 64 0 \; c10 set 36
43 52 55 59 0 \; c11 set 42 37 52 58 61 0 \; c12 set 35 42 54 57 63
0;
#X obj 43 544 sel 2;
#X msg 87 525 \; chordSequence 1 2 3 4 5 6 7 8 9 10 \; repeats 1;
#X msg 87 103 \; identifier DYW \; sectionSequence 1.1 2 1.2 2 \; wobbleSequence
0 0 1 0 \; delaySequence 0 0 1 0;
#X text 84 190 section 1 (verse);
#X text 85 496 section 2 (chorus);
#X obj 29 224 r DYW;
#X obj 29 266 r DYW;
#X obj 29 243 sel 1.1;
#X obj 29 285 sel 1.2;
#N canvas 176 65 677 452 dywExtraSections 0;
#X obj 36 63 r DYW;
#X obj 36 213 r DYW;
#X obj 336 63 r DYW;
#X obj 336 279 r DYW;
#X msg 80 111 \; c1 set 40 47 52 56 59 62 \; c2 set 40 47 52 56 59
64 \; c3 set 45 40 57 60 64 0 \; c4 set 45 40 57 60 64 69;
#X msg 80 261 \; c1 set 45 40 55 61 64 0 \; c2 set 45 40 52 55 61 0
\; c3 set 38 45 53 57 64 0 \; c4 set 38 45 53 57 62 0 \; c5 set 42
37 52 58 61 0 \; c6 set 42 37 58 61 64 0 \; c7 set 35 42 54 59 63 0
\; c8 set 35 42 54 58 63 0 \; c9 set 35 42 54 57 63 0 \; c10 set 35
42 54 57 63 66;
#X msg 380 111 \; c1 set 40 47 56 59 63 0 \; c2 set 40 47 59 63 68
0 \; c3 set 43 38 53 57 60 64 \; c4 set 43 38 53 57 62 0 \; c5 set
36 43 52 55 58 62 \; c6 set 36 43 55 58 62 64 \; c7 set 33 40 55 59
61 64 \; c8 set 33 40 52 55 59 61;
#X msg 380 327 \; c1 set 36 43 52 55 59 0 \; c2 set 42 42 52 58 61
0 \; c3 set 47 47 54 57 63 0;
#X msg 80 63 \; chordSequence 1 2 3 4 \; repeats 1;
#X msg 80 213 \; chordSequence 1 2 3 4 5 6 7 8 9 10 \; repeats 0;
#X msg 380 63 \; chordSequence 1 2 3 4 5 6 7 8 1 2 3 4 \; repeats 0
;
#X msg 380 279 \; chordSequence 1 2 3 \; repeats 0;
#X obj 36 82 sel 3;
#X text 77 32 section 3;
#X text 77 183 section 4;
#X text 377 33 section 5;
#X text 377 249 section 6;
#X obj 36 232 sel 4;
#X obj 336 82 sel 5;
#X obj 336 298 sel 6;
#X connect 0 0 12 0;
#X connect 1 0 17 0;
#X connect 2 0 18 0;
#X connect 3 0 19 0;
#X connect 12 0 8 0;
#X connect 12 0 4 0;
#X connect 17 0 9 0;
#X connect 17 0 5 0;
#X connect 18 0 10 0;
#X connect 18 0 6 0;
#X connect 19 0 11 0;
#X connect 19 0 7 0;
#X restore 436 676 pd dywExtraSections;
#X text 436 651 additional sections;
#X msg 87 266 \; chordSequence 1 2 3 4 6 1 2 3 4 6 1 2 7 8 9 10 11
12 \; repeats 0 \; wobblePattern 1 1 1 0 0 1 1 1 0 0 1 1 1 1 1 1 1
1 \; delayPattern 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 4 0 8 0;
#X connect 8 0 9 0;
#X connect 8 0 5 0;
#X connect 13 0 15 0;
#X connect 14 0 16 0;
#X connect 15 0 6 0;
#X connect 15 0 7 0;
#X connect 16 0 19 0;
#X connect 16 0 7 0;
#X restore 117 627 pd dontYouWorry;
#N canvas 18 23 1262 733 motivation 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 230 sel 1;
#X obj 42 428 sel 2;
#X obj 465 230 sel 3;
#X obj 796 230 sel 6;
#X obj 796 440 sel 7;
#X text 86 27 MOTIVATION;
#X obj 43 211 r MOT;
#X obj 42 409 r MOT;
#X obj 465 211 r MOT;
#X obj 455 399 r MOT;
#X obj 455 507 r MOT;
#X obj 796 211 r MOT;
#X obj 796 421 r MOT;
#X msg 87 259 \; c1 set 38 45 62 65 69 0 \; c2 set 45 40 60 64 69 0
\; c3 set 43 38 58 62 67 0 \; c4 set 45 40 61 64 67 0 \; c5 set 45
45 60 64 67 0 \; c6 set 44 44 59 63 66 0 \; c7 set 43 43 58 62 65 0
\; c8 set 46 46 62 65 69 0 \; c9 set 45 45 61 64 67 0;
#X msg 86 497 \; c1 set 38 45 57 62 65 0 \; c2 set 45 40 57 60 64 0
\; c3 set 43 38 55 58 62 0 \; c4 set 45 40 55 61 64 0 \; c5 set 45
45 55 57 60 64 \; c6 set 44 44 54 56 59 63 \; c7 set 43 43 53 55 58
62 \; c8 set 46 46 57 62 65 0 \; c9 set 45 45 55 61 64 0;
#X msg 509 259 \; c1 set 40 47 59 64 67 0 \; c2 set 35 42 59 62 66
0 \; c3 set 33 40 57 60 64 0 \; c4 set 35 35 57 63 66 0 \; c5 set 35
42 57 62 66 0;
#X msg 509 464 \; c1 set 45 33 57 60 64 0 \; c2 set 40 47 55 59 64
0;
#X msg 509 550 \; c1 set 40 47 64 67 71 0 \; c2 set 47 42 62 66 71
0 \; c3 set 45 40 60 64 69 0 \; c4 set 42 37 54 58 61 64;
#X msg 840 259 \; c1 set 35 42 54 59 62 66 \; c2 set 42 37 57 61 64
66 \; c3 set 40 35 55 59 62 64 \; c4 set 42 37 54 58 61 64 \; c5 set
42 42 57 61 64 0 \; c6 set 41 41 56 60 63 0 \; c7 set 40 40 55 59 62
0 \; c8 set 43 43 59 62 66 0 \; c9 set 42 42 54 58 61 64;
#X msg 840 479 \; c1 set 47 47 50 54 59 61 \; c2 set 47 47 54 59 61
62 \; c3 set 47 47 59 61 62 66;
#X msg 87 211 \; chordSequence 1 2 3 2 1 2 3 4 1 2 3 2 1 5 6 7 5 8
9 \; repeats 0;
#X msg 509 211 \; chordSequence 1 2 3 4 4 1 2 3 5 \; repeats 0;
#X msg 509 507 \; chordSequence 1 2 3 2 1 2 3 4 \; repeats 0;
#X msg 840 211 \; chordSequence 1 2 3 2 1 2 3 4 1 2 3 2 1 5 6 7 5 8
9 \; repeats 0;
#X msg 840 421 \; chordSequence 1 2 3 2 1 2 3 2 \; repeats 0 \; dives
1 1 1 1 2 2 2 2;
#X msg 86 409 \; chordSequence 1 2 3 2 1 2 3 4 1 2 3 2 1 5 6 7 5 8
9 \; repeats 0 \; bassPausePattern 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 \; wobblePattern 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 \; delayPattern
0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1;
#X msg 509 399 \; chordSequence 1 1 2 2 1 1 2 2 1 1 2 2 1 1 \; repeats
0 \; wobblePattern 1 \; delayPattern 0 0 0 0 0 0 0 0 1 1 1 1 1 1;
#X text 84 185 section 1 (chorus);
#X text 83 384 section 2 (verse);
#X text 506 370 section 4 (m8);
#X text 506 191 section 3 (instr break);
#X obj 455 526 sel 4.2;
#X obj 455 418 sel 4.1;
#X text 837 181 section 6 (high chorus);
#X text 837 391 section 7 (end break);
#X msg 87 102 \; identifier MOT \; sectionSequence 1 2 1 2 1 3 4.1
4.2 6 7 \; wobbleSequence 0 0 0 1 0 0 1 0 0 0 \; bassPauseSequence
0 1 0 1 0 0 0 0 0 0 \; delaySequence 0 0 0 1 0 0 1 0 0 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 38 0;
#X connect 3 0 23 0;
#X connect 3 0 16 0;
#X connect 4 0 28 0;
#X connect 4 0 17 0;
#X connect 5 0 24 0;
#X connect 5 0 18 0;
#X connect 6 0 26 0;
#X connect 6 0 21 0;
#X connect 7 0 27 0;
#X connect 7 0 22 0;
#X connect 9 0 3 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X connect 12 0 35 0;
#X connect 13 0 34 0;
#X connect 14 0 6 0;
#X connect 15 0 7 0;
#X connect 34 0 25 0;
#X connect 34 0 20 0;
#X connect 35 0 29 0;
#X connect 35 0 19 0;
#X restore 117 673 pd motivation;
#N canvas 128 37 972 738 iGotALetter 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 250 sel 1;
#X obj 43 428 sel 2;
#X text 86 27 I GOT A LETTER;
#X obj 43 231 r IGL;
#X obj 43 409 r IGL;
#X obj 339 499 r IGL;
#X obj 685 231 r IGL;
#X msg 384 231 \; chordSequence 1 2 3 4 4 \; repeats 1;
#X msg 729 299 \; c1 set 47 42 57 61 64 68 \; c2 set 47 42 57 61 63
68;
#X msg 384 274 \; chordSequence 1 2 3 4 4 1 2 3 4 5 \; repeats 0;
#X msg 86 298 \; c1 set 37 32 53 56 61 0 \; c2 set 46 41 56 61 65 0
\; c3 set 45 40 56 61 64 0 \; c4 set 44 44 51 54 58 61;
#X text 381 201 section 3 (chorus);
#X text 84 379 section 2 (bridge);
#X text 84 201 section 1 (verse);
#X msg 384 363 \; c1 set 37 44 53 61 65 68 \; c2 set 46 41 56 61 65
68 \; c3 set 45 40 56 61 64 68 \; c4 set 44 44 51 54 58 61 \; c5 set
43 43 55 58 61 0 \; c6 set 44 44 54 58 61 65;
#X obj 339 518 sel 4;
#X obj 685 250 sel 5;
#X msg 87 466 \; c1 set 45 40 52 55 61 0 \; c2 set 45 40 55 61 64 0
\; c3 set 38 45 54 57 61 0 \; c4 set 44 44 51 54 60 0;
#X msg 384 317 \; chordSequence 1 2 3 6 6 \; repeats 0;
#X msg 384 499 \; chordSequence 1 2 3 4 3 5 1 2 6 7 8 8 9 10 10 \;
repeats 0;
#X obj 327 274 r IGL;
#X obj 327 315 r IGL;
#X obj 327 293 sel 3.2;
#X obj 327 334 sel 3.3;
#X obj 327 233 r IGL;
#X obj 327 252 sel 3.1;
#X text 380 469 section 4 (m8);
#X msg 384 542 \; c1 set 42 37 52 56 61 0 \; c2 set 47 42 51 56 61
0 \; c3 set 37 37 53 56 60 0 \; c4 set 42 42 52 56 60 0 \; c5 set 44
44 53 56 60 0 \; c6 set 41 48 56 60 63 0 \; c7 set 46 41 53 56 59 62
\; c8 set 39 46 54 58 61 65 \; c9 set 38 45 54 57 61 0 \; c10 set 44
44 51 54 60 0;
#X text 726 201 section 5 (post-chorus);
#X msg 87 231 \; chordSequence 1 2 3 4 4 \; repeats 1 \; wobblePattern
1 1 1 0 0 \; verbPattern 0 0 0 2 2;
#X msg 729 231 \; chordSequence 1 2 \; repeats 1 \; wobblePattern 1
;
#X msg 87 409 \; chordSequence 1 2 3 4 4 \; repeats 0 \; wobblePattern
1 1 1 0 0;
#X msg 87 104 \; identifier IGL \; sectionSequence 1 1 2 3.1 1 2 3.2
4 3.1 5 3.1 \; wobbleSequence 0 0 0 0 1 1 0 0 0 1 0 0 \; verbSequence
0 0 0 0 1 0 0 0 0 0 0 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 35 0;
#X connect 3 0 32 0;
#X connect 3 0 13 0;
#X connect 4 0 34 0;
#X connect 4 0 20 0;
#X connect 6 0 3 0;
#X connect 7 0 4 0;
#X connect 8 0 18 0;
#X connect 9 0 19 0;
#X connect 18 0 22 0;
#X connect 18 0 30 0;
#X connect 19 0 33 0;
#X connect 19 0 11 0;
#X connect 23 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 12 0;
#X connect 25 0 17 0;
#X connect 26 0 21 0;
#X connect 26 0 17 0;
#X connect 27 0 28 0;
#X connect 28 0 10 0;
#X connect 28 0 17 0;
#X restore 373 412 pd iGotALetter;
#N canvas 103 28 1085 750 goldenTelephone 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 240 sel 1;
#X text 86 27 GOLDEN TELEPHONE;
#X obj 43 221 r GTL;
#X obj 33 369 r GTL;
#X obj 408 522 r GTL;
#X msg 87 269 \; c1 set 38 38 54 59 62 0 \; c2 set 37 37 54 57 61 0
\; c3 set 47 47 54 59 63 0;
#X msg 87 221 \; chordSequence 1 2 3 2 1 2 3 3 \; repeats 0;
#X obj 408 541 sel 4;
#X obj 750 221 r GTL;
#X msg 794 287 \; c1 set 42 42 57 61 64 68;
#X obj 750 240 sel 5;
#X msg 794 221 \; chordSequence 1 1 1 1 1 1 1 1 \; repeats 0 \; wobblePattern
1 \; dives 1 1 1 1 2 2 2 2;
#X obj 396 224 r GTL;
#X obj 396 265 r GTL;
#X obj 396 306 r GTL;
#X obj 396 243 sel 3.1;
#X obj 396 284 sel 3.2;
#X obj 396 325 sel 3.3;
#X text 84 191 section 1 (intro);
#X text 84 339 section 2 (verse);
#X text 449 191 section 3 (chorus);
#X text 449 492 section 4 (m8);
#X text 791 191 section 5 (end vamp);
#X obj 33 509 r GTL;
#X obj 33 388 sel 2.1;
#X obj 33 528 sel 2.2;
#X msg 87 433 \; c1 set 42 42 54 58 61 0 \; c2 set 45 45 52 57 61 0
\; c3 set 36 36 52 55 60 0 \; c4 set 47 47 54 59 63 0 \; c5 set 36
36 52 56 60 0;
#X msg 87 574 \; c1 set 42 42 58 61 66 0 \; c2 set 45 45 57 61 64 0
\; c3 set 36 36 55 60 64 0 \; c4 set 47 47 59 63 66 0 \; c5 set 36
36 56 60 64 0;
#X msg 87 509 \; chordSequence 1 2 3 4 1 2 5 4 1 2 3 4 1 2 5 4 \; repeats
0 \; wobblePattern 1 1 1 0 \; verbPattern 0 0 0 1;
#X msg 87 369 \; chordSequence 1 2 3 4 1 2 5 4 \; repeats 1 \; wobblePattern
1 1 1 0 \; verbPattern 0 0 0 1;
#X msg 451 522 \; chordSequence 1 2 3 4 1 2 3 4 1 2 3 4 5 \; repeats
0 \; wobblePattern 1 0 1 0 1 0 1 0 1 0 0 0 0;
#X msg 453 578 \; c1 set 47 47 54 57 62 0 \; c2 set 47 47 57 62 66
0 \; c3 set 40 40 54 56 59 62 \; c4 set 40 40 59 62 66 68 \; c5 set
37 37 53 56 59 65;
#X msg 452 221 \; chordSequence 1 2 3 4 5 6 1 2 7 7 8 \; repeats 0
;
#X msg 452 308 \; chordSequence 1 2 3 4 5 6 1 2 3 4 5 6 1 2 7 7 8 \;
repeats 0;
#X msg 452 351 \; c1 set 38 33 54 57 62 0 \; c2 set 38 33 57 62 66
0 \; c3 set 37 37 53 56 61 0 \; c4 set 36 36 52 55 60 0 \; c5 set 35
30 51 54 59 0 \; c6 set 35 30 54 59 63 0 \; c7 set 37 37 53 56 59 0
\; c8 set 37 32 56 59 65 0 \; c9 set 36 36 52 55 58 0;
#X msg 452 266 \; chordSequence 1 2 3 4 5 6 1 2 7 7 9 \; repeats 0
;
#X msg 88 102 \; identifier GTL \; sectionSequence 2.1 2.2 3.1 2.1
2.2 3.2 4 2.1 3.3 5 \; wobbleSequence 1 1 0 1 1 0 1 1 0 1 \; verbSequence
1 1 0 1 1 0 0 1 0 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 39 0;
#X connect 3 0 9 0;
#X connect 3 0 8 0;
#X connect 5 0 3 0;
#X connect 6 0 27 0;
#X connect 7 0 10 0;
#X connect 10 0 34 0;
#X connect 10 0 33 0;
#X connect 11 0 13 0;
#X connect 13 0 14 0;
#X connect 13 0 12 0;
#X connect 15 0 18 0;
#X connect 16 0 19 0;
#X connect 17 0 20 0;
#X connect 18 0 35 0;
#X connect 18 0 37 0;
#X connect 19 0 38 0;
#X connect 19 0 37 0;
#X connect 20 0 36 0;
#X connect 20 0 37 0;
#X connect 26 0 28 0;
#X connect 27 0 32 0;
#X connect 27 0 29 0;
#X connect 28 0 31 0;
#X connect 28 0 30 0;
#X restore 373 435 pd goldenTelephone;
#N canvas 124 33 901 728 suburbanLife 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 230 sel 1;
#X text 85 27 SUBURBAN LIFE;
#X obj 43 211 r SBL;
#X obj 43 398 r SBL;
#X obj 475 429 r SBL;
#X text 84 181 section 1 (verse);
#X text 84 368 section 2 (chorus);
#X obj 480 211 r SBL;
#X obj 480 231 sel 3;
#X obj 475 448 sel 4;
#X text 516 399 section 4 (m8);
#X text 516 182 section 3 (instr break);
#X msg 87 211 \; chordSequence 1 2 1 2 3 4 1 2 5 3 1 2 \; repeats 0
\; wobblePattern 1;
#X msg 87 398 \; chordSequence 1 2 3 4 1 2 3 4 1 5 6 7 8 9 10 10 11
11 \; repeats 0 \; wobblePattern 1;
#X obj 43 417 sel 2;
#X msg 87 266 \; c1 set 37 32 53 56 59 0 \; c2 set 37 32 53 56 59 65
\; c3 set 42 37 52 58 61 0 \; c4 set 42 37 52 58 61 64 \; c5 set 44
39 54 60 63 0;
#X msg 87 454 \; c1 set 42 37 57 61 64 0 \; c2 set 47 42 54 58 63 0
\; c3 set 37 32 53 56 59 0 \; c4 set 43 38 59 62 66 0 \; c5 set 47
47 51 54 57 61 \; c6 set 48 48 52 55 58 62 \; c7 set 49 49 53 56 59
65 \; c8 set 47 47 54 57 63 0 \; c9 set 46 41 53 56 62 0 \; c10 set
39 34 55 58 61 65 \; c11 set 38 33 54 57 60 64;
#X msg 519 265 \; c1 set 49 49 56 61 68 0 \; c2 set 47 47 54 59 66
0 \; c3 set 40 40 47 52 59 0 \; c4 set 42 42 49 54 61 0 \; c5 set 32
32 39 44 51 0 \; c6 set 33 33 40 45 52 0 \; c7 set 34 34 41 46 53 0
\; c8 set 35 35 42 47 54 0 \; c9 set 36 36 43 48 55 0;
#X msg 519 211 \; chordSequence 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 5 6 7
8 9 \; repeats 0 \; dives 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 0 0 0 0 0;
#X msg 519 487 \; c1 set 37 37 53 56 59 0 \; c2 set 37 37 52 55 58
0 \; c3 set 37 37 51 54 57 0 \; c4 set 37 37 49 53 56 0 \; c5 set 37
37 53 56 61 63;
#X msg 519 429 \; chordSequence 1 2 3 4 1 2 3 5 \; repeats 1 \; dives
1 1 1 1 2 2 2 2;
#X msg 87 103 \; identifier SBL \; sectionSequence 1 1 2 1 3 4 2 1
\; wobbleSequence 0 0 0 1 0 0 0 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 24 0;
#X connect 3 0 15 0;
#X connect 3 0 18 0;
#X connect 5 0 3 0;
#X connect 6 0 17 0;
#X connect 7 0 12 0;
#X connect 10 0 11 0;
#X connect 11 0 21 0;
#X connect 11 0 20 0;
#X connect 12 0 23 0;
#X connect 12 0 22 0;
#X connect 17 0 16 0;
#X connect 17 0 19 0;
#X restore 373 459 pd suburbanLife;
#N canvas 0 23 827 677 overAtYourHouse 0;
#X obj 113 81 inlet;
#X obj 88 62 r initialiseSong;
#X obj 88 81 sel;
#X obj 422 220 sel 3;
#X obj 422 392 sel 4;
#X obj 422 525 sel 5;
#X text 87 27 OVER AT YOUR HOUSE;
#X obj 34 201 r OYH;
#X obj 34 430 r OYH;
#X obj 422 201 r OYH;
#X obj 422 373 r OYH;
#X obj 422 506 r OYH;
#X msg 88 322 \; c1 set 47 47 54 57 63 0 \; c2 set 40 40 56 59 62 0
\; c3 set 42 42 52 58 61 0 \; c4 set 47 47 54 57 64 0;
#X msg 88 475 \; c1 set 44 44 54 59 63 0 \; c2 set 37 37 53 56 59 63
\; c3 set 42 42 57 61 64 0 \; c4 set 47 47 54 57 61 63 \; c5 set 40
40 56 59 63 0 \; c6 set 45 45 55 59 62 66 \; c7 set 45 45 55 59 61
66 \; c8 set 38 38 54 57 61 0 \; c9 set 43 43 59 62 66 0 \; c10 set
36 36 52 55 59 0 \; c11 set 42 42 52 58 61 0;
#X msg 466 416 \; c1 set 37 37 53 56 59 0 \; c2 set 42 42 52 58 61
0;
#X msg 466 574 \; c1 set 37 37 53 58 63 0;
#X msg 466 372 \; chordSequence 1 2 \; repeats 7;
#X obj 34 256 r OYH;
#X obj 34 275 sel 1.2;
#X obj 34 220 sel 1.1;
#X text 86 171 section 1 (verse);
#X text 85 400 section 2 (bridge);
#X text 463 171 section 3 (m8);
#X text 463 343 section 4 (end vamp);
#X text 463 476 section 5 (break);
#X msg 466 257 \; c1 set 37 37 53 56 59 0 \; c2 set 37 37 53 56 59
65 \; c3 set 37 37 56 59 65 68 \; c4 set 38 38 54 57 60 66 \; c5 set
42 42 52 58 61 64;
#X msg 466 201 \; chordSequence 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 5 \;
repeats 0 \; wobblePattern 1;
#X msg 88 201 \; chordSequence 1 2 1 2 3 2 1 2 \; repeats 0 \; wobblePattern
1;
#X msg 88 256 \; chordSequence 1 2 1 2 3 2 4 1 \; repeats 0 \; wobblePattern
1 \; delayPattern 1;
#X msg 88 430 \; chordSequence 1 2 3 4 5 5 6 7 8 9 10 11 \; repeats
0;
#X obj 34 449 sel 2;
#X msg 88 103 \; identifier OYH \; sectionSequence 1.1 1.2 2 1.1 1.2
2 3 4 5 \; wobbleSequence 0 0 0 1 1 0 1 0 1 \; delaySequence 0 0 0
0 1 0 0 0 0;
#X msg 466 506 \; chordSequence 1 1 1 1 1 1 1 1 \; repeats 0 \; wobblePattern
1 \; dives 1 1 1 1 2 2 2 2;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 31 0;
#X connect 3 0 26 0;
#X connect 3 0 25 0;
#X connect 4 0 16 0;
#X connect 4 0 14 0;
#X connect 5 0 32 0;
#X connect 5 0 15 0;
#X connect 7 0 19 0;
#X connect 8 0 30 0;
#X connect 9 0 3 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X connect 17 0 18 0;
#X connect 18 0 28 0;
#X connect 18 0 12 0;
#X connect 19 0 27 0;
#X connect 19 0 12 0;
#X connect 30 0 13 0;
#X connect 30 0 29 0;
#X restore 373 481 pd overAtYourHouse;
#N canvas 0 23 1095 750 giverHerWhatSheWants 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X text 85 27 GIVE HER WHAT SHE WANTS;
#X obj 33 210 r GHW;
#X obj 35 450 r GHW;
#X obj 33 255 r GHW;
#X obj 404 211 r GHW;
#X obj 404 397 r GHW;
#X obj 782 211 r GHW;
#X obj 782 439 r GHW;
#X msg 826 259 \; c1 set 36 36 55 60 64 0 \; c2 set 42 42 57 60 63
0 \; c3 set 41 41 53 56 62 0 \; c4 set 44 44 53 56 60 0 \; c5 set 43
43 55 59 62 0 \; c6 set 36 36 52 55 59 62 \; c7 set 42 42 52 56 58
61 \; c8 set 41 41 56 60 63 67 \; c9 set 44 44 60 63 67 0 \; c10 set
43 43 59 62 65 0;
#X msg 826 495 \; c1 set 36 36 55 60 64 0 \; c2 set 36 36 55 58 64
0 \; c3 set 42 42 54 58 61 0 \; c4 set 41 41 57 60 65 0 \; c5 set 41
41 56 60 65 0;
#X msg 826 211 \; chordSequence 1 2 3 4 5 6 7 8 9 10 \; repeats 1;
#X obj 33 230 sel 1.1;
#X obj 33 274 sel 1.2;
#X obj 35 469 sel 2.1;
#X obj 35 495 r GHW;
#X obj 35 514 sel 2.2;
#X obj 35 549 r GHW;
#X obj 35 568 sel 2.3;
#X msg 88 604 \; c1 set 38 38 53 57 60 0 \; c2 set 38 38 53 57 62 0
\; c3 set 38 38 53 57 60 64 \; c4 set 43 43 53 57 59 62 \; c5 set 43
43 53 57 59 64 \; c6 set 36 36 52 55 60 0 \; c7 set 47 47 57 57 62
62 \; c8 set 40 40 56 59 62 0 \; c9 set 41 41 53 56 62 0 \; c10 set
40 40 52 55 60 0 \; c11 set 39 39 51 54 58 60;
#X text 84 181 section 1 (verse opening);
#X text 84 421 section 2 (verse body);
#X obj 404 230 sel 3;
#X text 445 181 section 3 (bridge);
#X text 445 367 section 4 (descent);
#X obj 404 416 sel 4;
#X text 823 181 section 5 (instr break);
#X obj 782 231 sel 5;
#X text 823 411 section 6 (chorus);
#X obj 782 458 sel 6;
#X msg 448 211 \; chordSequence 1 2 3 4 5 5 6 6 1 2 3 4 5 5 7 7 \;
repeats 0;
#X msg 87 211 \; chordSequence 1 1 2 2 3 3 4 5 \; repeats 0;
#X msg 87 450 \; chordSequence 1 2 3 4 5 4 6 6 6 6 \; repeats 0;
#X msg 448 259 \; c1 set 45 45 57 60 64 0 \; c2 set 45 45 57 60 64
69 \; c3 set 40 40 55 59 62 0 \; c4 set 39 39 54 58 61 0 \; c5 set
38 38 53 57 60 0 \; c6 set 46 46 53 56 60 62 \; c7 set 38 38 53 56
60 65 \;;
#X msg 447 453 \; c1 set 36 36 48 52 55 60 \; c2 set 36 36 52 58 64
0 \; c3 set 36 36 51 57 63 0 \; c4 set 36 36 50 56 62 0;
#X msg 87 494 \; chordSequence 1 2 3 4 5 4 6 6 7 8 \; repeats 0 \;
wobblePattern 1;
#X msg 87 549 \; chordSequence 1 2 3 9 9 10 10 11 11 1 2 3 4 5 4 \;
repeats 0 \; wobblePattern 1;
#X msg 448 397 \; chordSequence 1 2 3 4 1 1 \; repeats 0 \; wobblePattern
1;
#X msg 826 439 \; chordSequence 1 2 3 4 5 \; repeats 3 \; wobblePattern
1;
#X msg 87 255 \; chordSequence 1 1 6 6 7 7 4 5 \; repeats 0 \; wobblePattern
1;
#X msg 87 103 \; identifier GHW \; sectionSequence 1.1 2.1 1.2 2.2
3 1.2 2.3 4 5 6 \; wobbleSequence 0 0 0 0 0 1 1 1 0 1 \; sineMode 1
;
#X msg 87 309 \; c1 set 36 36 55 60 64 0 \; c2 set 47 47 55 59 64 0
\; c3 set 46 46 55 58 64 0 \; c4 set 45 45 52 55 61 0 \; c5 set 45
45 52 55 61 65 \; c6 set 47 47 55 59 63 0 \; c7 set 46 46 55 58 62
0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 42 0;
#X connect 4 0 14 0;
#X connect 5 0 16 0;
#X connect 6 0 15 0;
#X connect 7 0 24 0;
#X connect 8 0 27 0;
#X connect 9 0 29 0;
#X connect 10 0 31 0;
#X connect 14 0 33 0;
#X connect 14 0 43 0;
#X connect 15 0 41 0;
#X connect 15 0 43 0;
#X connect 16 0 34 0;
#X connect 16 0 21 0;
#X connect 17 0 18 0;
#X connect 18 0 37 0;
#X connect 18 0 21 0;
#X connect 19 0 20 0;
#X connect 20 0 38 0;
#X connect 20 0 21 0;
#X connect 24 0 32 0;
#X connect 24 0 35 0;
#X connect 27 0 39 0;
#X connect 27 0 36 0;
#X connect 29 0 13 0;
#X connect 29 0 11 0;
#X connect 31 0 40 0;
#X connect 31 0 12 0;
#X restore 373 504 pd giverHerWhatSheWants;
#N canvas 19 23 721 753 upInSmoke 0;
#X obj 113 81 inlet;
#X obj 88 62 r initialiseSong;
#X obj 88 81 sel;
#X obj 44 220 sel 1;
#X obj 44 378 sel 2;
#X obj 44 566 sel 3;
#X text 87 27 UP IN SMOKE;
#X obj 44 201 r UIS;
#X obj 44 359 r UIS;
#X obj 44 547 r UIS;
#X obj 376 201 r UIS;
#X obj 376 369 r UIS;
#X obj 376 556 r UIS;
#X msg 88 249 \; c1 set 36 36 55 58 63 0 \; c2 set 43 43 53 58 62 0
\; c3 set 42 42 52 57 61 0 \; c4 set 41 41 51 56 60 0;
#X msg 88 417 \; c1 set 36 36 51 55 60 0 \; c2 set 41 41 53 57 60 0
\; c3 set 39 39 55 60 63 0 \; c4 set 41 41 53 58 60 0 \; c5 set 41
41 53 57 60 0;
#X msg 420 259 \; c1 set 44 44 54 60 63 0 \; c2 set 43 43 53 59 62
0 \; c3 set 44 44 51 54 58 60;
#X msg 420 614 \; c1 set 36 36 55 58 63 0 \; c2 set 41 41 51 55 58
62;
#X msg 88 201 \; chordSequence 1 2 3 4 3 2 \; repeats 1;
#X text 85 171 section 1 (chorus);
#X text 85 329 section 2 (verse);
#X msg 88 595 \; c1 set 39 39 51 55 60 0 \; c2 set 38 38 50 54 57 60
\; c3 set 37 37 53 56 59 0 \; c4 set 36 36 52 55 58 0 \; c5 set 39
39 55 60 63 0 \; c6 set 38 38 52 54 57 60 \; c7 set 37 37 53 56 60
0 \; c8 set 36 36 52 55 62 0 \; c9 set 41 41 56 60 63 0 \; c10 set
46 46 50 53 56 60 \; c11 set 47 47 54 57 61 63;
#X text 85 517 section 3 (bridge);
#X text 416 171 section 4 (m8);
#X text 417 339 section 5 (breakdown);
#X text 417 526 section 6 (end chord);
#X obj 376 220 sel 4;
#X obj 376 388 sel 5;
#X obj 376 575 sel 6;
#X msg 88 103 \; identifier UIS \; sectionSequence 1 2 3 1 2 3 1 4
5 1 1 6 \; wobbleSequence 0 0 0 0 1 0 0 1 0 0 0 1;
#X msg 88 359 \; chordSequence 1 2 3 4 5 \; repeats 1 \; wobblePattern
1;
#X msg 88 547 \; chordSequence 1 2 3 4 5 6 7 8 9 9 10 11 \; repeats
0;
#X msg 420 201 \; chordSequence 1 1 2 2 3 3 2 2 1 1 2 2 \; repeats
0 \; wobblePattern 1;
#X msg 420 417 \; c1 set 41 41 56 60 63 0 \; c2 set 41 41 56 60 63
68 \; c3 set 43 43 53 58 62 0 \; c4 set 43 43 53 58 62 65 \; c5 set
46 46 53 56 60 62;
#X msg 420 369 \; chordSequence 1 2 3 4 1 2 3 4 1 2 3 5 \; repeats
0;
#X msg 420 556 \; chordSequence 1 2 2 2 2 \; repeats 0 \; wobblePattern
1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 28 0;
#X connect 3 0 17 0;
#X connect 3 0 13 0;
#X connect 4 0 29 0;
#X connect 4 0 14 0;
#X connect 5 0 30 0;
#X connect 5 0 20 0;
#X connect 7 0 3 0;
#X connect 8 0 4 0;
#X connect 9 0 5 0;
#X connect 10 0 25 0;
#X connect 11 0 26 0;
#X connect 12 0 27 0;
#X connect 25 0 31 0;
#X connect 25 0 15 0;
#X connect 26 0 33 0;
#X connect 26 0 32 0;
#X connect 27 0 34 0;
#X connect 27 0 16 0;
#X restore 373 527 pd upInSmoke;
#N canvas 0 33 937 701 ATM 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 230 sel 1;
#X text 86 27 ATM;
#X obj 43 211 r ATM;
#X obj 33 410 r ATM;
#X obj 472 208 r ATM;
#X obj 472 387 r ATM;
#X msg 516 277 \; c1 set 40 40 55 59 62 0 \; c2 set 45 45 55 61 64
0 \; c3 set 38 38 54 57 61 0 \; c4 set 43 43 53 59 62 0;
#X msg 516 445 \; c1 set 37 37 54 59 63 0 \; c2 set 40 40 54 57 62
0 \; c3 set 39 39 53 56 61 0;
#X msg 87 270 \; c1 set 38 38 54 57 61 0 \; c2 set 47 47 54 57 63 0
\; c3 set 40 40 55 59 62 0 \; c4 set 45 45 55 61 64 0 \; c5 set 46
46 53 56 62 0 \; c6 set 45 45 55 61 65 0;
#X msg 87 499 \; c1 set 38 38 54 57 62 0 \; c2 set 47 47 54 57 62 0
\; c3 set 36 36 52 57 62 0 \; c4 set 36 36 52 55 58 62 \; c5 set 45
45 54 57 62 0 \; c6 set 46 46 54 58 61 0 \; c7 set 47 47 54 57 61 0
\; c8 set 40 40 56 59 62 0 \; c9 set 45 45 52 55 59 62 \; c10 set 38
38 54 57 61 0 \; c11 set 45 45 55 61 65 0 \; c12 set 45 45 55 60 64
0 \; c13 set 43 43 53 58 62 0 \; c14 set 36 36 52 55 58 62;
#X obj 33 454 r ATM;
#X obj 33 429 sel 2.1;
#X obj 33 473 sel 2.2;
#X obj 472 227 sel 3;
#X obj 472 406 sel 4;
#X msg 87 410 \; chordSequence 1 2 3 3 1 2 4 4 5 6 7 8 9 10 11 \; repeats
0;
#X msg 87 454 \; chordSequence 1 2 3 3 1 2 4 4 5 6 7 8 9 10 12 13 14
\; repeats 0;
#X text 84 181 section 1 (verse);
#X text 84 380 section 2 (chorus);
#X text 513 178 section 3 (m8);
#X text 513 357 section 4 (end);
#X msg 87 103 \; identifier ATM \; sectionSequence 1 1 2.1 1 2.2 3
2.2 4 \; wobbleSequence 0 0 0 1 0 1 0 1;
#X msg 516 208 \; chordSequence 1 2 1 2 1 2 1 2 3 4 3 4 3 4 3 4 1 2
1 2 1 2 1 2 \; repeats 0 \; wobblePattern 1;
#X msg 516 387 \; chordSequence 1 2 3 \; repeats 0 \; wobblePattern
1;
#X msg 87 211 \; chordSequence 1 2 3 4 1 2 3 4 1 2 5 2 3 3 4 6 \; repeats
0 \; wobblePattern 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 24 0;
#X connect 3 0 27 0;
#X connect 3 0 11 0;
#X connect 5 0 3 0;
#X connect 6 0 14 0;
#X connect 7 0 16 0;
#X connect 8 0 17 0;
#X connect 13 0 15 0;
#X connect 14 0 18 0;
#X connect 14 0 12 0;
#X connect 15 0 19 0;
#X connect 15 0 12 0;
#X connect 16 0 25 0;
#X connect 16 0 9 0;
#X connect 17 0 26 0;
#X connect 17 0 10 0;
#X restore 373 550 pd ATM;
#N canvas 129 23 802 735 jumpTheGun 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X text 86 27 JUMP THE GUN;
#X obj 31 233 r JTG;
#X obj 43 559 r JTG;
#X obj 435 229 r JTG;
#X obj 435 351 r JTG;
#X msg 489 351 \; chordSequence 1 1 2 3 4 4 5 6 \; repeats 0;
#X obj 31 272 r JTG;
#X obj 31 291 sel 1.2;
#X obj 31 252 sel 1.1;
#X obj 43 578 sel 2;
#X msg 87 559 \; chordSequence 1 2 1 2 3 3 4 5 6 \; repeats 0;
#X text 84 201 section 1 (verse);
#X text 83 528 section 2 (bridge);
#X text 486 199 section 3 (chorus);
#X obj 435 370 sel 3.2;
#X obj 435 247 sel 3.1;
#X msg 87 272 \; chordSequence 1 2 1 2 3 4 1 2 5 6 7 1 8 \; repeats
0 \; wobblePattern 1;
#X msg 87 231 \; chordSequence 1 2 1 2 3 4 1 2 5 6 7 1 2 \; repeats
0;
#X obj 31 324 r JTG;
#X obj 31 343 sel 1.3;
#X msg 87 325 \; chordSequence 1 2 1 2 1 2 1 2 3 4 1 2 5 6 7 1 8 \;
repeats 0 \; wobblePattern 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 \; bassPausePattern
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0;
#X msg 489 229 \; chordSequence 1 2 3 1 2 3 1 2 3 1 2 3 \; repeats
0 \; wobblePattern 1 \; delayPattern 0 0 0 0 0 0 1 1 1 1 1 1;
#X msg 87 102 \; identifier JTG \; sectionSequence 1.1 1.2 2 3.1 3.2
1.3 2 3.1 3.2 3.1 \; wobbleSequence 0 0 0 1 0 1 0 1 0 1 \; delaySequence
0 0 0 1 0 0 0 1 0 1 \; bassPauseSequence 0 0 0 0 0 1 0 0 0 0;
#X msg 489 295 \; c1 set 43 38 55 59 62 0 \; c2 set 39 39 55 58 62
65 \; c3 set 38 38 54 57 60 63;
#X msg 489 395 \; c1 set 36 43 51 55 58 62 \; c2 set 47 42 54 57 62
0 \; c3 set 46 41 53 56 62 0 \; c4 set 45 40 55 61 64 0 \; c5 set 38
33 60 64 67 71 \; c6 set 38 33 60 64 66 71;
#X msg 88 389 \; c1 set 31 43 55 59 62 0 \; c2 set 31 43 55 59 62 67
\; c3 set 36 48 55 58 62 65 \; c4 set 36 48 55 58 62 64 \; c5 set 33
45 57 60 64 67 \; c6 set 38 38 60 64 67 71 \; c7 set 38 38 60 64 66
71 \; c8 set 31 43 59 62 66 0;
#X msg 87 607 \; c1 set 40 47 55 59 62 0 \; c2 set 45 33 55 59 61 64
\; c3 set 45 40 55 60 64 0 \; c4 set 38 45 52 54 57 60 \; c5 set 44
44 54 58 60 65 \; c6 set 38 38 54 57 60 63;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 25 0;
#X connect 4 0 11 0;
#X connect 5 0 12 0;
#X connect 6 0 18 0;
#X connect 7 0 17 0;
#X connect 9 0 10 0;
#X connect 10 0 19 0;
#X connect 10 0 28 0;
#X connect 11 0 20 0;
#X connect 11 0 28 0;
#X connect 12 0 13 0;
#X connect 12 0 29 0;
#X connect 17 0 8 0;
#X connect 17 0 27 0;
#X connect 18 0 24 0;
#X connect 18 0 26 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 22 0 28 0;
#X restore 373 339 pd jumpTheGun;
#N canvas 0 23 968 739 that45 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 230 sel 1;
#X obj 43 415 sel 2;
#X obj 43 620 sel 3;
#X text 85 27 THAT 45;
#X obj 43 211 r TFF;
#X obj 43 396 r TFF;
#X obj 43 601 r TFF;
#X obj 308 211 r TFF;
#X obj 315 437 r TFF;
#X obj 315 617 r TFF;
#X obj 595 212 r TFF;
#X obj 595 410 r TFF;
#X msg 88 266 \; c1 set 47 47 54 59 63 0 \; c2 set 40 40 56 59 64 0
\; c3 set 43 43 55 59 64 0 \; c4 set 42 42 54 58 61 64 \; c5 set 47
47 54 57 63 0 \; c6 set 46 46 53 56 62 0 \; c7 set 39 39 54 57 61 0
;
#X msg 359 493 \; c1 set 38 38 54 57 61 0 \; c2 set 43 43 59 62 66
0 \; c3 set 36 36 52 55 59 0 \; c4 set 41 41 57 60 64 0 \; c5 set 46
46 53 57 62 0 \; c6 set 47 47 51 54 57 61;
#X msg 359 300 \; c1 set 40 40 55 59 62 0 \; c2 set 45 45 55 59 61
64 \; c3 set 39 39 51 54 61 0 \; c4 set 38 38 50 53 59 0 \; c5 set
37 37 52 56 59 0 \; c6 set 43 43 55 59 64 0 \; c7 set 42 42 54 58 61
64;
#X msg 359 211 \; chordSequence 1 2 3 4 5 6 7 6 7 \; repeats 0;
#X obj 308 230 sel 4.1;
#X obj 308 254 r TFF;
#X obj 308 273 sel 4.2;
#X msg 359 255 \; chordSequence 1 2 3 4 5 6 7 \; repeats 0;
#X obj 315 456 sel 5;
#X obj 315 636 sel 6;
#X obj 595 231 sel 7;
#X obj 595 429 sel 8;
#X msg 359 665 \; c1 set 40 40 56 59 64 0 \; c2 set 40 40 55 58 64
0 \; c3 set 40 40 54 57 64 0 \; c4 set 37 37 52 56 59 0;
#X msg 359 616 \; chordSequence 1 2 3 1 1 2 3 4 \; repeats 0;
#X msg 639 259 \; c1 set 45 45 55 60 64 0 \; c2 set 38 38 52 54 57
60 \; c3 set 44 44 54 59 63 0 \; c4 set 43 43 53 57 62 0 \; c5 set
42 42 52 57 61 0 \; c6 set 36 36 52 57 60 0 \; c7 set 47 47 54 57 61
63;
#X msg 639 211 \; chordSequence 1 2 3 4 5 6 7 \; repeats 0;
#X text 84 181 section 1 (verse pt 1);
#X text 84 368 section 2 (verse pt 2);
#X text 83 572 section 3 (bridge);
#X text 356 181 section 4 (chorus);
#X text 356 407 section 5 (m8);
#X text 356 587 section 6 (hi bridge);
#X text 636 182 section 7 (hi chorus);
#X text 636 380 section 8 (end);
#X msg 639 466 \; c1 set 36 36 52 55 58 62 \; c2 set 45 45 55 61 64
0 \; c3 set 45 45 52 55 62 0 \; c4 set 45 45 52 55 61 0 \; c5 set 40
40 52 56 59 0;
#X msg 87 451 \; c1 set 40 40 52 56 61 0 \; c2 set 40 40 55 59 61 0
\; c3 set 39 39 51 54 61 0 \; c4 set 38 38 50 53 59 0 \; c5 set 37
37 52 56 59 0 \; c6 set 37 37 52 56 59 64 \; c7 set 42 42 54 58 61
0 \; c8 set 42 42 54 58 62 0;
#X msg 87 649 \; c1 set 47 47 54 59 63 0 \; c2 set 47 47 53 59 62 0
\; c3 set 47 47 52 59 61 0 \; c4 set 44 44 54 59 63 0;
#X msg 87 211 \; chordSequence 1 1 2 3 4 1 5 6 7 \; repeats 0 \; wobblePattern
1;
#X msg 87 396 \; chordSequence 1 2 3 4 5 6 7 8 \; repeats 0 \; wobblePattern
1;
#X msg 87 601 \; chordSequence 1 2 3 1 1 2 3 4 \; repeats 0;
#X msg 359 437 \; chordSequence 1 2 3 4 5 5 6 6 \; repeats 0 \; wobblePattern
1;
#X msg 87 103 \; identifier TFF \; sectionSequence 1 2 3 4.1 1 2 3
4.2 5 6 7 8 \; wobbleSequence 0 0 0 0 1 1 0 0 1 0 0 1 \; sineMode 1
;
#X msg 639 410 \; chordSequence 1 1 2 3 4 1 1 2 3 4 1 1 2 3 4 5 5 5
5 \; repeats 0 \; wobblePattern 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 46 0;
#X connect 3 0 42 0;
#X connect 3 0 15 0;
#X connect 4 0 43 0;
#X connect 4 0 40 0;
#X connect 5 0 44 0;
#X connect 5 0 41 0;
#X connect 7 0 3 0;
#X connect 8 0 4 0;
#X connect 9 0 5 0;
#X connect 10 0 19 0;
#X connect 11 0 23 0;
#X connect 12 0 24 0;
#X connect 13 0 25 0;
#X connect 14 0 26 0;
#X connect 19 0 18 0;
#X connect 19 0 17 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 21 0 17 0;
#X connect 23 0 45 0;
#X connect 23 0 16 0;
#X connect 24 0 28 0;
#X connect 24 0 27 0;
#X connect 25 0 30 0;
#X connect 25 0 29 0;
#X connect 26 0 47 0;
#X connect 26 0 39 0;
#X restore 373 573 pd that45;
#N canvas 0 23 623 685 ambulance 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X text 84 171 section 1;
#X text 84 299 section 2;
#X text 84 427 section 3;
#X obj 43 348 sel 2;
#X obj 43 476 sel 3;
#X text 356 171 section 4;
#X obj 315 220 sel 4;
#X text 86 27 AMBULANCE;
#X obj 43 201 r AMB;
#X obj 43 329 r AMB;
#X obj 43 457 r AMB;
#X obj 315 201 r AMB;
#X msg 87 249 \; c1 set 40 40 54 55 59 62 \; c2 set 52 52 54 55 59
62;
#X msg 87 377 \; c1 set 40 40 54 56 59 62 \; c2 set 52 52 54 56 59
62;
#X msg 87 505 \; c1 set 40 40 52 56 59 64 \; c2 set 44 44 52 56 59
64 \; c3 set 45 45 52 57 61 64 \; c4 set 42 42 54 57 60 64 \; c5 set
47 47 52 56 59 64 \; c6 set 46 46 58 61 64 68 \; c7 set 45 45 57 60
64 67 \; c8 set 38 38 54 57 60 64;
#X msg 359 249 \; c1 set 39 39 53 55 58 61 \; c2 set 51 51 53 55 58
61 \; c3 set 38 38 52 54 57 60 \; c4 set 50 50 52 54 57 60;
#X msg 87 103 \; identifier AMB \; sectionSequence 1 2 3 1 2 3 4;
#X msg 87 201 \; chordSequence 1 2 \; repeats 3;
#X msg 87 329 \; chordSequence 1 2 \; repeats 3;
#X msg 87 457 \; chordSequence 1 2 3 4 5 6 7 8 \; repeats 0;
#X msg 359 201 \; chordSequence 1 2 3 4 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 20 0;
#X connect 3 0 21 0;
#X connect 3 0 16 0;
#X connect 7 0 22 0;
#X connect 7 0 17 0;
#X connect 8 0 23 0;
#X connect 8 0 18 0;
#X connect 10 0 24 0;
#X connect 10 0 19 0;
#X connect 12 0 3 0;
#X connect 13 0 7 0;
#X connect 14 0 8 0;
#X connect 15 0 10 0;
#X restore 117 650 pd ambulance;
#N canvas 184 23 610 523 break1 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X text 84 171 section 1;
#X text 86 27 BREAK 1;
#X obj 43 201 r BR1;
#X msg 87 259 \; c1 set 40 40 47 52 55 59 \; c2 set 40 40 52 55 59
64 \; c3 set 40 40 55 59 64 67 \; c4 set 40 40 59 64 67 71;
#X msg 87 103 \; identifier BR1 \; sectionSequence 1;
#X msg 87 201 \; chordSequence 1 2 3 4 1 2 3 4 \; repeats 0 \; dives
1 1 1 1 2 2 2 2;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X restore 649 339 pd break1;
#N canvas 0 23 605 711 powerfulMellow 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X msg 87 565 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 329 section 2;
#X text 84 487 section 3;
#X obj 43 378 sel 2;
#X obj 43 536 sel 3;
#X msg 359 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X msg 359 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X msg 359 565 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 356 171 section 4;
#X text 356 329 section 5;
#X text 356 487 section 6;
#X obj 315 220 sel 4;
#X obj 315 378 sel 5;
#X obj 315 536 sel 6;
#X text 86 27 POWERFUL MELLOW;
#X obj 43 201 r PWM;
#X obj 43 359 r PWM;
#X obj 43 517 r PWM;
#X obj 315 201 r PWM;
#X obj 315 359 r PWM;
#X obj 315 517 r PWM;
#X msg 87 103 \; identifier PWM \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 517 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 359 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 359 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 359 517 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 28 0;
#X connect 3 0 29 0;
#X connect 3 0 4 0;
#X connect 10 0 30 0;
#X connect 10 0 6 0;
#X connect 11 0 31 0;
#X connect 11 0 7 0;
#X connect 18 0 32 0;
#X connect 18 0 12 0;
#X connect 19 0 33 0;
#X connect 19 0 13 0;
#X connect 20 0 34 0;
#X connect 20 0 14 0;
#X connect 22 0 3 0;
#X connect 23 0 10 0;
#X connect 24 0 11 0;
#X connect 25 0 18 0;
#X connect 26 0 19 0;
#X connect 27 0 20 0;
#X restore 117 696 pd powerfulMellow;
#N canvas 0 23 364 559 loseMyHead 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 329 section 2;
#X obj 43 378 sel 2;
#X text 86 27 LOSE MY HEAD;
#X obj 43 201 r LMH;
#X obj 43 359 r LMH;
#X msg 87 103 \; identifier LMH \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 8 0 14 0;
#X connect 8 0 6 0;
#X connect 10 0 3 0;
#X connect 11 0 8 0;
#X restore 117 471 pd loseMyHead;
#N canvas 0 23 332 388 makeYouCome 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X text 86 27 MAKE YOU COME;
#X obj 43 200 r MYC;
#X msg 87 103 \; identifier MYC \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 3 0 4 0;
#X connect 7 0 3 0;
#X restore 117 494 pd makeYouCome;
#N canvas 0 23 594 706 keepYouSatisfied 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 329 section 2;
#X obj 43 378 sel 2;
#X text 86 27 KEEP YOU SATISFIED;
#X obj 43 201 r KYS;
#X obj 43 359 r KYS;
#X msg 87 103 \; identifier KYS \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 8 0 14 0;
#X connect 8 0 6 0;
#X connect 10 0 3 0;
#X connect 11 0 8 0;
#X restore 117 517 pd keepYouSatisfied;
#N canvas 0 23 601 711 suckinWatermelons 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 329 section 2;
#X obj 43 378 sel 2;
#X text 86 27 SUCKIN WATERMELONS;
#X msg 87 573 \; c1 set 0 0 0 0 0 0 0;
#X text 84 495 section 3;
#X obj 43 201 r SWM;
#X obj 43 359 r SWM;
#X obj 43 525 r SWM;
#X obj 43 544 sel 3;
#X msg 87 103 \; identifier SWM \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 525 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 16 0;
#X connect 3 0 17 0;
#X connect 3 0 4 0;
#X connect 8 0 18 0;
#X connect 8 0 6 0;
#X connect 12 0 3 0;
#X connect 13 0 8 0;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 15 0 10 0;
#X restore 117 540 pd suckinWatermelons;
#N canvas 193 90 399 559 somebodyElse 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 230 sel 1;
#X text 84 181 section 1;
#X text 84 379 section 2;
#X obj 43 428 sel 2;
#X obj 43 211 r SBE;
#X obj 43 409 r SBE;
#X text 86 27 SOMEBODY ELSE;
#X msg 87 279 \; c1 set 37 44 52 56 63 0 \; c2 set 40 47 56 59 63 0
\; c3 set 45 40 56 61 64 0 \; c4 set 45 40 61 64 68 0 \; c5 set 40
47 54 56 59 0;
#X msg 87 457 \; c1 set 43 50 54 59 62 66 \; c2 set 43 38 50 55 59
66 \; c3 set 40 47 51 56 59 63 \; c4 set 40 35 52 56 61 63;
#X msg 87 409 \; chordSequence 1 2 1 2 3 4 3 4 \; repeats 1;
#X msg 87 103 \; identifier SBE \; sectionSequence 1 2 1 2 \; wobbleSequence
0 0 1 0 \; delaySequence 0 0 1 0;
#X msg 87 212 \; chordSequence 1 2 3 4 1 5 3 4 \; repeats 0 \; wobblePattern
1 \; delayPattern 0 0 0 0 1 1 1 1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 3 0 10 0;
#X connect 6 0 12 0;
#X connect 6 0 11 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 117 448 pd somebodyElse;
#N canvas 0 23 337 526 endSection 0;
#X obj 112 81 inlet;
#X obj 87 62 r initialiseSong;
#X obj 87 81 sel;
#X obj 43 220 sel 1;
#X msg 87 249 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 171 section 1;
#X msg 87 407 \; c1 set 0 0 0 0 0 0 0 \; c2 set 0 0 0 0 0 0 0 \; c3
set 0 0 0 0 0 0 0 \; c4 set 0 0 0 0 0 0 0;
#X text 84 329 section 2;
#X obj 43 378 sel 2;
#X text 86 27 BBQ SAUCE - END SECTION;
#X obj 43 201 r BQE;
#X obj 43 359 r BQE;
#X msg 87 103 \; identifier BQE \; sectionSequence 1 2 3 4 5;
#X msg 87 201 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X msg 87 359 \; chordSequence 1 2 3 4 5 \; repeats 0;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 8 0 14 0;
#X connect 8 0 6 0;
#X connect 10 0 3 0;
#X connect 11 0 8 0;
#X restore 117 563 pd endSection;
#X obj 28 338 r init1;
#X obj 29 627 r init1;
#X msg 333 339 14;
#X msg 333 412 15;
#X msg 333 435 16;
#X msg 333 458 17;
#X msg 333 481 18;
#X msg 333 504 19;
#X msg 333 527 20;
#X msg 333 550 21;
#X msg 333 573 22;
#X obj 281 339 r init1;
#X text 77 310 SEVEN ELEVEN;
#X text 78 419 BBQ SAUCE;
#X text 79 601 DON'T YOU WORRY;
#X text 331 312 BEFORE AND AFTER;
#X text 331 384 SECRET OF A MEMORY;
#X text 558 311 BREAKS;
#X text 426 124 song template;
#X text 26 21 define sequence of songs in the set;
#N canvas 0 23 1252 648 parameterGuide 0;
#X text 126 78 The left-most number is the main bass note.;
#X text 24 108 The second number is the (optional) bouncing bass note
\, which the bass can bounce down (or up) to during the wobble. for
those chords that don't bounce \, simply copy over the first note twice.
;
#X text 48 172 The 3rd \, 4th \, and 5th numbers are the body of the
chord.;
#X text 30 207 The 6th number is an optional top note - for chords
without a top note \, just put '0'.;
#X text 216 47 Each row contains 6 numbers.;
#X text 200 308 Guide to additional parameters:;
#X text 32 332 'repeats' is mandatory. state here how many times you
want that section to repeat each time it is played. a value of 0 ensures
the section does not repeat.;
#X text 32 375 'dives' indicates whether or not you want a particular
bass dive to occur on a particular chord. this does not need to be
stated \, and is set to 0 by default.;
#X text 26 419 'bassPause' is also optional. here you can state whether
you want the bass to drop out on particular chords in the sequence.
;
#X text 243 11 Guide to chord messages:;
#X text 577 9 Guide to the chord wobbling parameter:;
#X text 601 138 0 means no wobble \, 1 means wobble.;
#X text 457 173 At the song level \, the parameter is called wobbleSequence.
;
#X text 445 204 At the section level \, the parameter is called wobblePattern.
;
#X text 463 323 To allow the section headers to go through unadulterated
\, simply set the song header to 'wobbleSequence 1'.;
#X text 451 366 Likewise \, if you only want to control wobble at the
song level \, simply set all section headers to 'wobblePattern 1'.
;
#X text 457 476 This is useful if you want to set a pattern for a section
\, but you only want it to play on a particular instance of that section.
;
#X text 451 411 A '0' in the song header will override anything written
in the section header \, whereas a '1' in the song header will allow
the wobble sequence in the section header to play out as written.;
#X text 469 99 You can define a sequence for 'chord wobble' at the
song level and the section level.;
#X text 457 37 'Chord wobble' defines where you want the chords to
wobble along with the bass.;
#X text 499 72 It is optional \, so you can choose not to define it.
;
#X text 475 236 If no sequence is defined in either the song or section
header \, chord wobble is switched off by default.;
#X text 445 281 If any sequence is defined in the song header or any
section header \, a sequence must be defined for all headers.;
#X text 1029 8 List of available parameters:;
#X text 1161 64 repeats;
#X text 1173 87 dives;
#X text 1149 110 bassPause;
#X text 939 133 chord wobble (wobbleSequence \, wobblePattern);
#X text 975 41 chord messages (incl bass bounce note);
#X text 296 485 New parameters:;
#X text 32 513 'verb' and 'delay' follow the same conventions as 'wobble':
state the 'sequence' in the song header \, and the 'pattern' in the
section header.;
#X text 1011 156 verb (verbSequence \, verbPattern);
#X text 50 563 'sine mode' currently can only be set at the song level.
This changes the entire sound to straight sine chords.;
#X text 993 179 delay (delaySequence \, delayPattern);
#X text 1041 202 sine mode (song level only);
#X restore 428 227 pd parameterGuide;
#X text 426 191 Full guide to available parameters for songs and syntax
for chord messages here:;
#X text 315 663 TO ADD A NEW SECTION: Use the 'song template' on this
page \, and see the 'parameter guide' for more details.;
#N canvas 190 35 442 403 singlePerformance 0;
#X obj 137 213 inlet;
#X obj 182 151 r songSequence;
#X obj 108 151 list length;
#X obj 131 126 + 1;
#X obj 93 172 ==;
#X obj 93 192 sel 1;
#X obj 93 212 spigot;
#X obj 93 93 r songOver;
#X obj 93 126 int 1;
#X obj 93 243 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 60 265 spigot;
#X obj 60 340 s clapToFinish;
#X obj 44 243 r clap;
#X obj 60 291 int 0;
#X obj 100 291 + 1;
#X obj 60 310 sel 1;
#X text 34 29 If this module is switched on \, when the last chord
of the set has been triggered \, a final clap will silence the patch.
;
#X connect 0 0 6 1;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 3 0 8 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 8 0 3 0;
#X connect 8 0 4 0;
#X connect 9 0 10 1;
#X connect 10 0 13 0;
#X connect 12 0 10 0;
#X connect 13 0 14 0;
#X connect 13 0 15 0;
#X connect 14 0 13 1;
#X connect 15 0 11 0;
#X restore 429 74 pd singlePerformance;
#X obj 429 52 loadbang;
#X text 515 52 <-- 1 = on \, 0 = off;
#X text 426 25 single-performance mode (clap to finish);
#X msg 484 52 0;
#X text 86 109 alternative sequence;
#X text 86 48 proper sequence;
#X msg 88 71 \; songSequence -1 1 -1 2 -1 3 -1 4 -1 10 12 15 14;
#X msg 88 127 \; songSequence;
#X connect 0 0 26 0;
#X connect 1 0 27 0;
#X connect 2 0 79 0;
#X connect 3 0 4 0;
#X connect 5 0 8 0;
#X connect 5 0 9 0;
#X connect 5 0 10 0;
#X connect 5 0 11 0;
#X connect 5 0 12 0;
#X connect 5 0 7 0;
#X connect 6 0 28 0;
#X connect 7 0 47 0;
#X connect 8 0 43 0;
#X connect 9 0 44 0;
#X connect 10 0 45 0;
#X connect 11 0 46 0;
#X connect 12 0 48 0;
#X connect 13 0 29 0;
#X connect 14 0 40 0;
#X connect 15 0 30 0;
#X connect 16 0 42 0;
#X connect 17 0 52 0;
#X connect 17 0 53 0;
#X connect 17 0 54 0;
#X connect 17 0 56 0;
#X connect 17 0 57 0;
#X connect 17 0 58 0;
#X connect 17 0 59 0;
#X connect 17 0 55 0;
#X connect 18 0 20 0;
#X connect 18 0 21 0;
#X connect 18 0 22 0;
#X connect 18 0 19 0;
#X connect 18 0 23 0;
#X connect 19 0 41 0;
#X connect 24 0 3 0;
#X connect 49 0 0 0;
#X connect 49 0 1 0;
#X connect 49 0 6 0;
#X connect 50 0 13 0;
#X connect 50 0 14 0;
#X connect 50 0 15 0;
#X connect 50 0 16 0;
#X connect 51 0 38 0;
#X connect 52 0 31 0;
#X connect 53 0 32 0;
#X connect 54 0 33 0;
#X connect 55 0 34 0;
#X connect 56 0 35 0;
#X connect 57 0 36 0;
#X connect 58 0 37 0;
#X connect 59 0 39 0;
#X connect 60 0 51 0;
#X connect 73 0 76 0;
#X connect 76 0 72 0;
#X restore 27 265 pd songSelector;
#N canvas 71 23 918 724 globalTables 0;
#X obj 28 180 list prepend 0;
#X obj 190 180 list prepend 0;
#X obj 370 180 list prepend 0;
#X obj 28 310 list prepend 0;
#X obj 28 291 r dives;
#X obj 29 483 list prepend 0;
#X obj 428 482 list prepend 0;
#X obj 610 482 list prepend 0;
#X text 427 399 High-level sequence;
#X text 608 399 Low-level pattern;
#X text 427 374 Chord wobbling;
#X text 26 244 Bass dives;
#X text 27 369 Bass pauses;
#X text 27 115 Song sequence;
#X text 188 115 Section sequence;
#X text 368 115 Chord sequence;
#X obj 28 142 table songSequenceTable;
#X obj 28 161 r songSequence;
#X obj 28 199 s songSequenceTable;
#X obj 190 161 r sectionSequence;
#X obj 190 142 table sectionSequenceTable;
#X obj 190 199 s sectionSequenceTable;
#X obj 428 463 r wobbleSequence;
#X obj 428 445 table wobbleSequenceTable;
#X obj 427 501 s wobbleSequenceTable;
#X obj 610 463 r wobblePattern;
#X obj 610 445 table wobblePatternTable;
#X obj 609 501 s wobblePatternTable;
#X obj 370 161 r chordSequence;
#X obj 370 142 table chordSequenceTable;
#X obj 370 199 s chordSequenceTable;
#X obj 28 272 table divesTable;
#X obj 28 329 s divesTable;
#X text 425 417 (in song header);
#X text 607 418 (in section header);
#X text 26 29 each of these tables is shared by all of the songs in
the patch. here they're prepended with an index of '0' \, so '0' doesn't
have to be typed every time a message is sent to one of the tables.
;
#X obj 28 662 list prepend 0;
#X obj 210 662 list prepend 0;
#X text 27 579 High-level sequence;
#X text 208 579 Low-level pattern;
#X text 25 597 (in song header);
#X text 207 598 (in section header);
#X text 27 554 Chord verb;
#X obj 28 625 table verbSequenceTable;
#X obj 210 625 table verbPatternTable;
#X obj 27 681 s verbSequenceTable;
#X obj 209 681 s verbPatternTable;
#X obj 210 643 r verbPattern;
#X obj 28 643 r verbSequence;
#X obj 430 662 list prepend 0;
#X obj 612 662 list prepend 0;
#X text 429 579 High-level sequence;
#X text 610 579 Low-level pattern;
#X text 427 597 (in song header);
#X text 609 598 (in section header);
#X text 428 554 Chord delay;
#X obj 430 625 table delaySequenceTable;
#X obj 612 625 table delayPatternTable;
#X obj 430 643 r delaySequence;
#X obj 612 643 r delayPattern;
#X obj 429 681 s delaySequenceTable;
#X obj 611 681 s delayPatternTable;
#X obj 224 483 list prepend 0;
#X obj 29 464 r bassPauseSequence;
#X obj 224 464 r bassPausePattern;
#X obj 29 445 table bassPauseSequenceTable;
#X obj 29 502 s bassPauseSequenceTable;
#X text 27 398 High-level sequence;
#X text 223 398 Low-level pattern;
#X text 25 416 (in song header);
#X text 222 417 (in section header);
#X obj 224 445 table bassPausePatternTable;
#X obj 224 502 s bassPausePatternTable;
#X connect 0 0 18 0;
#X connect 1 0 21 0;
#X connect 2 0 30 0;
#X connect 3 0 32 0;
#X connect 4 0 3 0;
#X connect 5 0 66 0;
#X connect 6 0 24 0;
#X connect 7 0 27 0;
#X connect 17 0 0 0;
#X connect 19 0 1 0;
#X connect 22 0 6 0;
#X connect 25 0 7 0;
#X connect 28 0 2 0;
#X connect 36 0 45 0;
#X connect 37 0 46 0;
#X connect 47 0 37 0;
#X connect 48 0 36 0;
#X connect 49 0 60 0;
#X connect 50 0 61 0;
#X connect 58 0 49 0;
#X connect 59 0 50 0;
#X connect 62 0 72 0;
#X connect 63 0 5 0;
#X connect 64 0 62 0;
#X restore 27 351 pd globalTables;
#N canvas 213 64 662 474 songSequencer 0;
#X obj 31 78 r songOver;
#X obj 71 166 + 1;
#X obj 31 219 mod \$0;
#X obj 64 199 list length;
#X text 101 78 <-- bang received whenever a song ends;
#X text 238 198 <-- ensures that the set sequence repeats in a loop
\, whatever its length;
#X obj 31 388 s initialiseSong;
#X text 27 35 song sequencer;
#X text 103 165 <-- increments upwards each time a bang is received
;
#X text 195 314 <-- outputs the song number stored at the corresponding
index number in the songSequence table;
#X text 143 389 <-- sends this number out to all songs - the song assigned
this number will initialise;
#X text 104 132 <-- so the first song is initialised automatically
;
#X obj 31 166 int 0;
#X obj 46 132 r init2;
#X obj 59 258 == 0;
#X obj 90 258 sel 1;
#X text 251 258 <-- trigger for optional 'auto-transpose' function
\, located in frequency generator module;
#X obj 127 258 s triggerTranspose;
#X obj 137 199 r songSequence;
#X obj 31 315 tabread songSequenceTable;
#X connect 0 0 12 0;
#X connect 1 0 12 1;
#X connect 2 0 14 0;
#X connect 2 0 19 0;
#X connect 3 0 2 1;
#X connect 12 0 1 0;
#X connect 12 0 2 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 17 0;
#X connect 18 0 3 0;
#X connect 19 0 6 0;
#X restore 27 383 pd songSequencer;
#N canvas 74 23 693 584 sectionSequencer 0;
#X text 29 34 section sequencer;
#X obj 74 235 + 1;
#X obj 120 276 list length;
#X obj 55 296 ==;
#X obj 55 354 s lastSection;
#X text 306 276 <-- test: is the index of the section being triggered
the same as the number of sections in the song?;
#X text 217 394 <-- reads from the sequence sent into the table by
the current song module;
#X obj 35 73 r sectionOver;
#X text 125 73 <-- the section sequencer is triggered by a section
ending;
#X text 106 125 <--it's also triggered as soon as the patch opens \,
thereby initialising the first section;
#X obj 131 183 r lastSection;
#X msg 62 183 0;
#X obj 35 235 int 0;
#X text 146 355 <-- opens a spigot - sends a '1' is the last section
is triggered \, or a '0' if any other section is triggered;
#X obj 92 183 sel 1;
#X obj 95 276 - 1;
#X obj 35 470 s;
#X obj 103 470 r identifier;
#X obj 60 470 symbol;
#X text 189 469 <-- sends the section message out to the currently
identified song;
#X text 104 235 <-- main counter;
#X text 222 182 <-- if the final section of a song has just been triggered
\, reset the counter to 0;
#X obj 51 127 r init3;
#X obj 193 276 r sectionSequence;
#X obj 35 395 tabread sectionSequenceTable;
#X connect 1 0 12 1;
#X connect 2 0 15 0;
#X connect 3 0 4 0;
#X connect 7 0 12 0;
#X connect 10 0 14 0;
#X connect 11 0 12 1;
#X connect 12 0 1 0;
#X connect 12 0 3 0;
#X connect 12 0 24 0;
#X connect 14 0 11 0;
#X connect 15 0 3 1;
#X connect 17 0 18 0;
#X connect 18 0 16 1;
#X connect 22 0 12 0;
#X connect 23 0 2 0;
#X connect 24 0 16 0;
#X restore 27 406 pd sectionSequencer;
#N canvas 479 159 574 331 chordSequencer 0;
#N canvas 171 90 699 638 chRepeater 0;
#X obj 41 426 s sectionOver;
#X obj 93 95 list length;
#X obj 41 95 ==;
#X obj 106 171 + 1;
#X obj 123 151 r sectionOver;
#X msg 94 151 0;
#X obj 67 191 s repeatCounter;
#X obj 79 236 r repeatCounter;
#X obj 41 115 sel 1;
#X obj 66 255 r repeats;
#X obj 41 255 ==;
#X text 269 93 <-- test: is the index number just triggered the same
as the length of the chord sequence? (in other words \, is the chord
sequence at its end?);
#X obj 41 275 sel 1;
#X text 132 428 <--if it's the last chord of the sequence \, and the
section has repeated as many times as specified \, a bang will be sent
here;
#X obj 67 171 int 0;
#X obj 41 236 int 0;
#X obj 67 95 - 1;
#X obj 41 74 r repeater;
#X text 39 41 chord progression repeater;
#X obj 41 305 t b b;
#X obj 167 95 r chordSequence;
#X text 218 162 <-- counts the number of times a section has repeated
\, resetting itself when it receives a sectionOver message;
#X text 183 238 <-- test: is the number of times the section has repeated
the same as the designated number of repeats? (in other words \, has
it repeated as many times as it was asked to?);
#X text 270 350 <-- resets all values in the named tables to 0 \, before
the sectionOver message is actually sent. in practice \, this means
sections don't have to declare these sequences \, as they will be clear
by default.;
#X msg 68 333 \; divesTable const 0 \; wobblePatternTable const 0 \;
verbPatternTable const 0 \; delayPatternTable const 0 \; bassPausePatternTable
const 0;
#X connect 1 0 16 0;
#X connect 2 0 8 0;
#X connect 3 0 14 1;
#X connect 4 0 5 0;
#X connect 5 0 14 1;
#X connect 7 0 15 1;
#X connect 8 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 1;
#X connect 10 0 12 0;
#X connect 12 0 19 0;
#X connect 14 0 3 0;
#X connect 14 0 6 0;
#X connect 15 0 10 0;
#X connect 16 0 2 1;
#X connect 17 0 2 0;
#X connect 19 0 0 0;
#X connect 19 1 24 0;
#X connect 20 0 1 0;
#X restore 50 121 pd chRepeater;
#N canvas 307 149 641 323 concludeSong 0;
#X obj 32 236 s songOver;
#X obj 65 74 r lastSection;
#X obj 32 94 spigot;
#X obj 32 52 r sectionOver;
#X obj 32 125 t b b;
#X text 331 161 <-- resets all values in the named tables to 0 \, before
the songOver message is actually sent. in practice \, this means songs
don't have to declare a sequence for these parameters \, as they will
be clear by default.;
#X text 159 74 <-- allows only the final sectionOver message of a song
through \, occuring on the last chord of the last section;
#X msg 59 154 \; wobbleSequenceTable const 0 \; verbSequenceTable const
0 \; delaySequenceTable const 0 \; bassPauseSequenceTable const 0 \;
sineMode 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 4 1 7 0;
#X restore 50 183 pd concludeSong;
#X text 156 182 <-- sends a bang to songOver when the last chord of
the last section of a song has been triggered;
#N canvas 319 86 665 322 chordReader 0;
#X obj 86 109 + 1;
#X obj 74 229 s chordDistributor;
#X obj 48 43 r clap;
#X obj 105 78 r sectionOver;
#X text 194 77 <-- if the section is over \, reset the counter to 1
;
#X text 98 43 <-- the chord sequence is triggered by claps.;
#X text 118 109 <-- main counter - simply increments upwards;
#X obj 48 138 mod \$1;
#X obj 91 138 list length;
#X text 267 138 <-- in case the chord progression is repeated \, this
ensures it loops around at the right point;
#X obj 48 109 int 0;
#X msg 75 78 0;
#X obj 47 160 t 0 0;
#X obj 47 255 s repeater;
#X text 245 186 <-- sends the chord number to the chord distributor
\, to trigger that chord;
#X obj 165 138 r chordSequence;
#X obj 74 185 tabread chordSequenceTable;
#X connect 0 0 10 1;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 7 0 12 0;
#X connect 8 0 7 1;
#X connect 10 0 0 0;
#X connect 10 0 7 0;
#X connect 11 0 10 1;
#X connect 12 0 13 0;
#X connect 12 1 16 0;
#X connect 15 0 8 0;
#X connect 16 0 1 0;
#X restore 50 61 pd chordReader;
#X text 150 121 <-- handles repetitions of chord progressions and indicates
when a section has properly ended;
#X text 154 63 <-- reads and sends out chord sequence data \, and sends
triggers to the repeater;
#N canvas 102 56 418 618 chordDistributor 0;
#X obj 45 137 r c1;
#X obj 45 155 r c2;
#X obj 45 173 r c3;
#X obj 45 191 r c4;
#X obj 45 209 r c5;
#X obj 45 227 r c6;
#X obj 45 245 r c7;
#X obj 45 263 r c8;
#X obj 45 281 r c9;
#X obj 39 299 r c10;
#X obj 39 317 r c11;
#X obj 39 335 r c12;
#X obj 133 392 s playChord;
#X obj 78 98 r chordDistributor;
#X text 28 30 chord distributor;
#X msg 78 335 35 42 54 57 63 0;
#X msg 78 317 38 33 54 57 60 64;
#X msg 78 299 44 44 51 54 60 0;
#X msg 78 281 38 45 54 57 61 0;
#X msg 78 263 31 43 59 62 66 0;
#X msg 78 245 38 38 60 64 66 71;
#X msg 78 227 38 38 54 57 60 63;
#X msg 78 209 44 44 54 58 60 65;
#X msg 78 191 41 41 57 60 64 69;
#X msg 78 173 36 43 52 55 60 64;
#X msg 78 155 45 40 57 61 64 69;
#X msg 78 137 40 35 52 55 59 64;
#X text 28 57 each of these message boxes are reset by the song modules
during runtime;
#X msg 78 371 36 36 52 55 58 62;
#X msg 78 353 43 43 53 58 62 0;
#X obj 78 118 sel 1 2 3 4 5 6 7 8 9 10 11 12 13 14;
#X obj 39 353 r c13;
#X obj 39 371 r c14;
#X connect 0 0 26 0;
#X connect 1 0 25 0;
#X connect 2 0 24 0;
#X connect 3 0 23 0;
#X connect 4 0 22 0;
#X connect 5 0 21 0;
#X connect 6 0 20 0;
#X connect 7 0 19 0;
#X connect 8 0 18 0;
#X connect 9 0 17 0;
#X connect 10 0 16 0;
#X connect 11 0 15 0;
#X connect 13 0 30 0;
#X connect 15 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 12 0;
#X connect 18 0 12 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 21 0 12 0;
#X connect 22 0 12 0;
#X connect 23 0 12 0;
#X connect 24 0 12 0;
#X connect 25 0 12 0;
#X connect 26 0 12 0;
#X connect 28 0 12 0;
#X connect 29 0 12 0;
#X connect 30 0 26 0;
#X connect 30 1 25 0;
#X connect 30 2 24 0;
#X connect 30 3 23 0;
#X connect 30 4 22 0;
#X connect 30 5 21 0;
#X connect 30 6 20 0;
#X connect 30 7 19 0;
#X connect 30 8 18 0;
#X connect 30 9 17 0;
#X connect 30 10 16 0;
#X connect 30 11 15 0;
#X connect 30 12 29 0;
#X connect 30 13 28 0;
#X connect 31 0 29 0;
#X connect 32 0 28 0;
#X restore 50 245 pd chordDistributor;
#X text 175 245 <-- distributes chords to frequency generator;
#X restore 27 429 pd chordSequencer;
#X text 129 265 <--the song data and sequence of the set are stored
here;
#X text 129 350 <--tables used by all songs;
#X text 24 314 SEQUENCING OF SONG DATA;
#X text 25 233 STORAGE OF SONG DATA;
#X text 139 381 <--processes song sequence data;
#X text 151 405 <--processes section sequence data;
#X text 143 427 <--processes chord sequence data;
#N canvas 311 23 619 741 chords 0;
#N canvas 112 23 579 660 polyOscs 0;
#X obj 133 120 phasor~;
#X obj 182 120 phasor~;
#X obj 80 238 expr~ $v1 > 0.5;
#X obj 80 258 expr~ $v1 > 0.5;
#X obj 80 297 expr~ $v1 > 0.5;
#X obj 80 277 expr~ $v1 > 0.5;
#X obj 84 120 phasor~;
#X obj 35 120 phasor~;
#X obj 35 100 r~ freq2;
#X obj 89 100 r~ freq3;
#X obj 143 100 r~ freq4;
#X obj 197 100 r~ freq5;
#X obj 35 166 s~ ph2;
#X obj 79 166 s~ ph3;
#X obj 122 166 s~ ph4;
#X obj 165 166 s~ ph5;
#X obj 36 238 r~ ph2;
#X obj 36 258 r~ ph3;
#X obj 36 277 r~ ph4;
#X obj 36 297 r~ ph5;
#X obj 182 141 *~;
#X text 32 32 CHORD OSCILLATORS;
#X text 33 208 Square waves;
#X obj 230 287 lop~ 15000;
#X obj 230 381 s~ sqChords;
#X obj 177 247 +~;
#X obj 177 288 +~;
#X obj 205 268 +~;
#X text 32 70 Saw waves (for square waves);
#X obj 230 268 *~ 0.25;
#X obj 230 306 -~ 0.5;
#X obj 210 142 r~ osc5ramp;
#X obj 32 465 r~ freq2;
#X obj 86 465 r~ freq3;
#X obj 140 465 r~ freq4;
#X obj 194 465 r~ freq5;
#X obj 32 489 osc~;
#X obj 66 489 osc~;
#X obj 100 489 osc~;
#X obj 134 489 osc~;
#X obj 32 515 +~;
#X obj 58 515 +~;
#X obj 32 536 +~;
#X obj 32 601 s~ sineChords;
#X obj 230 351 *~;
#X obj 32 580 *~;
#X obj 32 561 hip~ 350;
#X obj 87 580 *~ 0.04;
#X obj 255 351 +~ 1;
#X obj 255 332 *~ -1;
#X text 30 438 Sine waves (for sine mode);
#X text 372 332 <-- gate for sine mode;
#X obj 292 332 r~ sineRamp;
#X obj 87 561 r~ sineRamp;
#X connect 0 0 14 0;
#X connect 1 0 20 0;
#X connect 2 0 25 0;
#X connect 3 0 25 1;
#X connect 4 0 26 1;
#X connect 5 0 26 0;
#X connect 6 0 13 0;
#X connect 7 0 12 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 10 0 0 0;
#X connect 11 0 1 0;
#X connect 16 0 2 0;
#X connect 17 0 3 0;
#X connect 18 0 5 0;
#X connect 19 0 4 0;
#X connect 20 0 15 0;
#X connect 23 0 30 0;
#X connect 25 0 27 0;
#X connect 26 0 27 1;
#X connect 27 0 29 0;
#X connect 29 0 23 0;
#X connect 30 0 44 0;
#X connect 31 0 20 1;
#X connect 32 0 36 0;
#X connect 33 0 37 0;
#X connect 34 0 38 0;
#X connect 35 0 39 0;
#X connect 36 0 40 0;
#X connect 37 0 40 1;
#X connect 38 0 41 0;
#X connect 39 0 41 1;
#X connect 40 0 42 0;
#X connect 41 0 42 1;
#X connect 42 0 46 0;
#X connect 44 0 24 0;
#X connect 45 0 43 0;
#X connect 46 0 45 0;
#X connect 47 0 45 1;
#X connect 48 0 44 1;
#X connect 49 0 48 0;
#X connect 52 0 49 0;
#X connect 53 0 47 0;
#X restore 34 88 pd polyOscs;
#X text 117 87 <-- convert frequencies to wave groups;
#N canvas 290 216 600 190 wobbleReader 0;
#N canvas 520 212 692 440 wobblePatternReader 0;
#X obj 45 46 r clap;
#X obj 82 145 + 1;
#X obj 88 204 list length;
#X obj 45 204 mod \$1;
#X obj 101 126 r sectionOver;
#X msg 72 126 0;
#X obj 45 145 int 0;
#X obj 45 366 s wobblePatternTrigger;
#X text 191 364 <-- on each clap \, sends out either a 1 or 0 according
to the sequence written in the section message.;
#X obj 45 281 tabread wobblePatternTable;
#X obj 161 204 r wobblePattern;
#X text 94 46 <-- the clap ultimately triggers an 'open' or 'tight'
chord envelope \, and opens or closes a gate allowing the chord wobble
to sound.;
#X text 188 125 <-- reset counter to 0 when the last chord of a section
has just been triggered;
#X text 266 202 <-- sets the loop for the counter to the same length
as the wobblePattern list \, so that list will be repeated whatever
its length;
#X text 218 280 <-- reads the pattern stated in a section header (from
the wobblePattern table) \, outputting the value located at the index
number sent in from the counter above;
#X connect 0 0 6 0;
#X connect 1 0 6 1;
#X connect 2 0 3 1;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 6 1;
#X connect 6 0 3 0;
#X connect 6 0 1 0;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X restore 33 48 pd wobblePatternReader;
#N canvas 322 107 650 540 wobbleSequenceReader 0;
#X obj 40 408 s wobbleOnOff;
#X obj 40 350 spigot;
#X obj 111 208 + 1;
#X msg 100 188 0;
#X obj 73 208 int 0;
#X obj 129 188 r songOver;
#X obj 73 76 r sectionOver;
#X obj 130 308 * -1;
#X obj 130 328 + 1;
#X obj 97 351 spigot;
#X obj 84 308 r clap;
#X msg 84 327 0;
#X obj 82 155 r init3;
#X text 164 80 <-- sends in a bang at the end of each section \, and
on startup (after the wobbleSequence table has been filled);
#X text 206 189 <-- resets the counter to 0 each time a songOver message
is received;
#X text 171 304 <-- if a '1' is received from the wobbleSequence table
\, the left spigot will allow the wobblePattern through \, and the
right spigot will be closed. if a '0' is received \, the left spigot
will be closed \, and the right spigot will allow a '0' to be sent
out on each clap.;
#X text 246 238 <-- reads the high-level song pattern from the wobbleSequence
table \, and outputs the value located at the index number sent in
from the counter above;
#X text 131 407 <-- sends out a '0' (off) or '1' (on) message on each
clap \, as governed by all the stuff above;
#X obj 40 36 r wobblePatternTrigger;
#X obj 73 241 tabread wobbleSequenceTable;
#X obj 73 123 del 1;
#X text 117 123 <-- resolves an issue where values were being output
from the table before the correct values could be sent in;
#X connect 1 0 0 0;
#X connect 2 0 4 1;
#X connect 3 0 4 1;
#X connect 4 0 2 0;
#X connect 4 0 19 0;
#X connect 5 0 3 0;
#X connect 6 0 20 0;
#X connect 7 0 8 0;
#X connect 8 0 9 1;
#X connect 9 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 4 0;
#X connect 18 0 1 0;
#X connect 19 0 1 1;
#X connect 19 0 7 0;
#X connect 20 0 4 0;
#X restore 33 105 pd wobbleSequenceReader;
#X text 187 47 <-- reads values from the low-level pattern table (the
sequences written in each section);
#X text 185 103 <-- reads values from the high-level wobble sequence
table (the sequences written in the header of each song);
#X restore 34 205 pd wobbleReader;
#X text 135 205 <-- determine whether 'chord wobble' should be switched
on or off \, and send out regular triggers;
#N canvas 330 223 561 308 attackChords 0;
#X obj 27 124 vline~;
#X msg 27 102 0 1 \, 5000 300 1 \, 1000 300 101 \, 150 2000 401 \,
0 1700 2401;
#X msg 46 80 0 1 \, 2000 100 1 \, 120 200 101 \, 0 200 301;
#X obj 27 57 sel 0 1;
#X obj 27 144 s~ chordsAttEnv;
#X text 380 102 <-- 'open' envelope;
#X text 293 79 <-- 'tight' envelope;
#X obj 27 203 r~ sqChords;
#X obj 27 223 vcf~ 3;
#X obj 27 242 s~ attChords;
#X obj 71 223 r~ chordsAttEnv;
#X text 179 223 <-- receives envelope and raw chords \, and filters
them;
#X obj 27 35 r wobbleOnOff;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 8 1;
#X connect 12 0 3 0;
#X restore 34 265 pd attackChords;
#X text 140 262 <-- alternate between 'tight' and 'open' attack chords
\, according to sequence specified by section message;
#X text 197 321 <-- filter the wobble chords \, and switch them on/off
according to the sequence specified by the section message;
#X text 153 381 <-- mix together the attack and wobble chords;
#N canvas 251 86 254 442 wobbleChords 0;
#X obj 103 206 r~ bigAdc3;
#X obj 39 225 vcf~ 3;
#X obj 55 206 *~ 1000;
#X obj 39 187 r~ sqChords;
#X obj 39 248 *~;
#X obj 39 48 r clap;
#X obj 39 89 vline~;
#X msg 39 68 0 5 \, 1 250 250;
#X obj 39 338 *~;
#X obj 54 318 vline~;
#X msg 54 298 \$1 30;
#X obj 54 279 r wobbleOnOff;
#X text 37 24 Chords sustain envelope;
#X obj 39 108 s~ chordsSusEnvelope;
#X obj 65 248 r~ chordsSusEnvelope;
#X text 38 158 Wobble chords filtering;
#X obj 39 362 s~ wobChords;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 4 0 8 0;
#X connect 5 0 7 0;
#X connect 6 0 13 0;
#X connect 7 0 6 0;
#X connect 8 0 16 0;
#X connect 9 0 8 1;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 14 0 4 1;
#X restore 34 321 pd wobbleChords;
#N canvas 381 178 595 187 verbReader 0;
#N canvas 361 142 643 510 verbSequenceReader 0;
#X obj 35 329 spigot;
#X obj 106 187 + 1;
#X msg 95 167 0;
#X obj 68 187 int 0;
#X obj 124 167 r songOver;
#X obj 68 55 r sectionOver;
#X obj 125 287 * -1;
#X obj 125 307 + 1;
#X obj 92 330 spigot;
#X obj 79 287 r clap;
#X obj 77 134 r init3;
#X text 201 168 <-- resets the counter to 0 each time a songOver message
is received;
#X obj 68 102 del 1;
#X text 112 102 <-- resolves an issue where values were being output
from the table before the correct values could be sent in;
#X obj 68 220 tabread verbSequenceTable;
#X obj 35 432 s verbWetAmt;
#X obj 35 32 r verbWetEnvelope;
#X text 121 432 <-- sends out an envelope to either increase \, decrease
\, or maintain the verb level \, as governed by all the stuff above
;
#X text 241 217 <-- reads the high-level song pattern from the verbSequence
table \, and outputs the value located at the index number sent in
from the counter above;
#X obj 35 403 line;
#X text 159 59 <-- sends in a bang at the end of each section \, and
on startup (after the verbSequence table has been filled);
#X msg 35 376 \$1 1500;
#X text 166 283 <-- if a '1' is received from the verbSequence table
\, the left spigot will allow the verbPattern through \, and the right
spigot will be closed. if a '0' is received \, the left spigot will
be closed \, and the right spigot will allow a 0 message to be sent
out on each clap.;
#X msg 79 306 0;
#X connect 0 0 21 0;
#X connect 1 0 3 1;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 3 0 14 0;
#X connect 4 0 2 0;
#X connect 5 0 12 0;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 8 0 21 0;
#X connect 9 0 23 0;
#X connect 10 0 3 0;
#X connect 12 0 3 0;
#X connect 14 0 0 1;
#X connect 14 0 6 0;
#X connect 16 0 0 0;
#X connect 19 0 15 0;
#X connect 21 0 19 0;
#X connect 23 0 8 0;
#X restore 37 108 pd verbSequenceReader;
#N canvas 266 45 667 429 verbPatternReader 0;
#X obj 49 246 sel 0 1 2;
#X obj 49 115 int 0;
#X obj 87 115 + 1;
#X obj 49 155 mod \$1;
#X obj 93 155 list length;
#X obj 49 206 tabread verbPatternTable;
#X obj 105 94 r sectionOver;
#X msg 76 94 0;
#X obj 49 52 r clap;
#X obj 49 328 s verbWetEnvelope;
#X text 196 103 <-- main counter \, resets at the end of each section
;
#X obj 167 155 r verbPattern;
#X text 259 155 <-- sets the loop for the counter to the same length
as the verbPattern list \, so that list will be repeated whatever its
length;
#X text 205 206 <-- reads the pattern stated in a section header (from
the verbPattern table) \, outputting the value located at the index
number sent in from the counter above;
#X text 168 328 <-- on each clap \, sends out one of the envelopes
above \, according to the sequence written in the section message.
;
#X text 99 50 <-- the clap ultimately triggers zero \, mild \, or heavy
verb.;
#X text 150 283 <-- 3 envelope types: no verb \, mild verb \, and heavy
verb \, with a gentle ramp;
#X msg 49 265 0;
#X msg 57 284 0.1;
#X msg 63 304 0.25;
#X connect 0 0 17 0;
#X connect 0 1 18 0;
#X connect 0 2 19 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 1 1;
#X connect 8 0 1 0;
#X connect 11 0 4 0;
#X connect 17 0 9 0;
#X connect 18 0 9 0;
#X connect 19 0 9 0;
#X restore 37 50 pd verbPatternReader;
#X text 175 108 <-- reads values from the high-level 'sequence' table
(the sequences written in the header of each song);
#X text 171 51 <-- reads values from the low-level 'pattern' table
(the sequences written in each section);
#X restore 34 498 pd verbReader;
#X text 126 498 <-- determine whether chord verb should be zero \,
mild \, or heavy \, and send out regular triggers;
#N canvas 221 110 269 322 eqDoublingFlanging 0;
#X obj 75 55 r~ chordMix;
#N canvas 435 190 760 559 flanger 0;
#X obj 184 264 metro 10;
#X floatatom 140 172 5 0 0 0 - - -, f 5;
#X obj 346 236 +~ 1;
#X obj 89 420 +~;
#X obj 185 286 snapshot~;
#X obj 346 300 +~ 1;
#X obj 346 265 *~ 1;
#X obj 183 242 loadbang;
#X obj 346 208 osc~ 0.1;
#X text 390 221 delay magnitude(ms);
#X text 387 258 delay offset(ms);
#X text 480 384 feedback amount;
#X obj 196 136 vsl 12 50 0.001 1 0 0 empty empty speed -5 -7 1 10 -262144
-1 -1 0 1;
#X obj 83 76 inlet~;
#X obj 433 384 *~ 0.5;
#X obj 229 136 vsl 12 50 0 10 0 0 empty empty offset -5 -7 1 10 -262144
-1 -1 0 1;
#X obj 262 136 vsl 12 50 0 20 0 0 empty empty delay -5 -7 1 10 -262144
-1 -1 0 1;
#X obj 294 136 vsl 12 50 0 0.99 0 0 empty empty feedback -5 -7 1 10
-262144 -1 -1 0 1;
#X obj 142 75 inlet;
#X obj 199 75 inlet;
#X obj 142 99 s \$0-osc;
#X obj 346 175 r \$0-osc;
#X obj 199 99 s \$0-off;
#X obj 393 277 r \$0-off;
#X obj 256 75 inlet;
#X obj 256 99 s \$0-del;
#X obj 392 237 r \$0-del;
#X obj 314 74 inlet;
#X obj 314 99 s \$0-feed;
#X obj 466 294 r \$0-feed;
#X obj 191 405 delwrite~ \$0-line 1000;
#X obj 346 329 vd~ \$0-line;
#X text 137 125 flanger;
#X obj 89 514 outlet~;
#X text 137 155 delay(ms);
#X text 367 446 In addition to the sliders \, the inlets allow the
user to fully control the internals of the patch with no range-limits
;
#X obj 466 350 expr if($f1 > 1 \, 0.99 \, $f1);
#X obj 466 327 expr if($f1 < -1 \, -0.99 \, $f1);
#X floatatom 168 207 5 0 0 0 - - -, f 5;
#X floatatom 207 206 5 0 0 0 - - -, f 5;
#X floatatom 249 209 5 0 0 0 - - -, f 5;
#X floatatom 291 210 5 0 0 0 - - -, f 5;
#X text 80 24 flange effect created by github.com/AndrewLngdn;
#X obj 38 454 *~ 0.25;
#X obj 89 454 *~ 0.75;
#X obj 74 488 +~;
#X text 142 454 <-- wet/dry balance;
#X connect 0 0 4 0;
#X connect 2 0 6 0;
#X connect 3 0 44 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 5 0 31 0;
#X connect 6 0 5 0;
#X connect 7 0 0 0;
#X connect 8 0 2 0;
#X connect 12 0 8 0;
#X connect 12 0 38 0;
#X connect 13 0 3 0;
#X connect 13 0 30 0;
#X connect 13 0 43 0;
#X connect 14 0 30 0;
#X connect 15 0 5 1;
#X connect 15 0 39 0;
#X connect 16 0 6 1;
#X connect 16 0 40 0;
#X connect 17 0 14 1;
#X connect 17 0 41 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 21 0 8 0;
#X connect 23 0 5 1;
#X connect 24 0 25 0;
#X connect 26 0 6 1;
#X connect 27 0 28 0;
#X connect 29 0 37 0;
#X connect 31 0 3 1;
#X connect 31 0 14 0;
#X connect 36 0 14 1;
#X connect 37 0 36 0;
#X connect 43 0 45 0;
#X connect 44 0 45 1;
#X connect 45 0 33 0;
#X restore 75 195 pd flanger;
#X obj 75 135 hip~ 200;
#X obj 75 85 *~ 0.35;
#X obj 75 115 lop~ 2000;
#N canvas 218 108 288 262 doubler 0;
#X obj 27 47 inlet~;
#X obj 27 214 outlet~;
#X obj 71 127 delread~ phaseDoubling 10;
#X obj 71 108 delwrite~ phaseDoubling 10;
#X obj 27 184 +~;
#X text 25 17 PHASEY DOUBLER;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 2 0 4 1;
#X connect 4 0 1 0;
#X restore 75 165 pd doubler;
#X obj 75 225 s~ chordMixTreated;
#X connect 0 0 3 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X restore 34 438 pd eqDoublingFlanging;
#X text 176 437 <-- puts filtered chords through eq \, doubling and
flanging effects;
#X text 121 560 <-- chords are sent through automated reverb;
#N canvas 431 259 254 323 mixChords 0;
#X obj 68 239 s~ chordMix;
#X obj 52 78 *~ 0.5;
#X obj 52 56 r~ attChords;
#X obj 68 169 +~;
#X obj 68 208 hip~ 200;
#X obj 98 123 *~ 0.9;
#X obj 99 103 r~ wobChords;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X restore 34 381 pd mixChords;
#N canvas 269 223 667 440 chordDelay 0;
#X obj 46 31 r~ chordMixVerbed;
#X obj 46 295 +~;
#X obj 103 242 *~;
#X obj 128 242 r~ delayWetAmt;
#X obj 103 91 delwrite~ chordDelay 250;
#X obj 103 110 delread~ chordDelay 250;
#X obj 118 138 delwrite~ chordDelay2 250;
#X obj 118 158 delread~ chordDelay2 250;
#X obj 118 178 *~ 0.5;
#X obj 103 211 +~;
#X text 265 100 <-- initial delay;
#X text 288 147 <-- second echo;
#X text 224 242 <-- from delayReader;
#X obj 46 385 s~ chordMixDelayed;
#X obj 46 340 +~;
#X text 217 340 <-- flat chords for sine mode;
#X obj 72 340 r~ sineChordsEnveloped;
#X connect 0 0 4 0;
#X connect 0 0 1 0;
#X connect 1 0 14 0;
#X connect 2 0 1 1;
#X connect 3 0 2 1;
#X connect 5 0 9 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 1;
#X connect 9 0 2 0;
#X connect 14 0 13 0;
#X connect 16 0 14 1;
#X restore 34 681 pd chordDelay;
#N canvas 166 165 773 448 chordVerb 0;
#N canvas 267 306 706 383 vfreeverb~ 0;
#N canvas 261 41 778 367 combfilters-left1 0;
#X obj 46 244 +~;
#X obj 61 219 *~ 0.3;
#X obj 61 194 lop~ 1000;
#X obj 231 244 +~;
#X obj 246 219 *~ 0.3;
#X obj 246 194 lop~ 1000;
#X obj 429 218 *~ 0.3;
#X obj 429 193 lop~ 1000;
#X obj 414 241 +~;
#X obj 610 218 *~ 0.3;
#X obj 610 193 lop~ 1000;
#X obj 595 241 +~;
#X obj 61 141 delread~ \$0-comb1left;
#X obj 246 142 delread~ \$0-comb2left;
#X obj 429 141 delread~ \$0-comb3left;
#X obj 610 141 delread~ \$0-comb4left;
#X obj 46 268 delwrite~ \$0-comb1left 100;
#X obj 231 268 delwrite~ \$0-comb2left 100;
#X obj 414 267 delwrite~ \$0-comb3left 100;
#X obj 595 267 delwrite~ \$0-comb4left 100;
#X obj 61 97 r \$0-comb1left;
#X obj 246 97 r \$0-comb2left;
#X obj 429 95 r \$0-comb3left;
#X obj 610 96 r \$0-comb4left;
#X obj 112 170 r \$0-frequency;
#X obj 297 170 r \$0-frequency;
#X obj 480 167 r \$0-frequency;
#X obj 661 167 r \$0-frequency;
#X obj 46 28 inlet~;
#X obj 338 326 outlet~;
#X floatatom 70 119 5 0 0 0 - - -, f 5;
#X floatatom 255 121 5 0 0 0 - - -, f 5;
#X floatatom 439 119 5 0 0 0 - - -, f 5;
#X floatatom 622 121 5 0 0 0 - - -, f 5;
#X obj 279 58 clip 0 0.99;
#X obj 279 29 r \$0-room;
#X connect 0 0 16 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 17 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 18 0;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 19 0;
#X connect 12 0 2 0;
#X connect 12 0 29 0;
#X connect 13 0 5 0;
#X connect 13 0 29 0;
#X connect 14 0 7 0;
#X connect 14 0 29 0;
#X connect 15 0 10 0;
#X connect 15 0 29 0;
#X connect 20 0 12 0;
#X connect 20 0 30 0;
#X connect 21 0 13 0;
#X connect 21 0 31 0;
#X connect 22 0 14 0;
#X connect 22 0 32 0;
#X connect 23 0 15 0;
#X connect 23 0 33 0;
#X connect 24 0 2 1;
#X connect 25 0 5 1;
#X connect 26 0 7 1;
#X connect 27 0 10 1;
#X connect 28 0 0 0;
#X connect 28 0 3 0;
#X connect 28 0 8 0;
#X connect 28 0 11 0;
#X connect 34 0 1 1;
#X connect 34 0 4 1;
#X connect 34 0 6 1;
#X connect 34 0 9 1;
#X connect 35 0 34 0;
#X restore 39 141 pd combfilters-left1;
#N canvas 27 56 358 650 diffusor-left 0;
#X obj 51 107 *~ 0.5;
#X obj 36 132 +~;
#X obj 66 132 -~;
#X obj 36 26 inlet~;
#X obj 81 238 *~ 0.5;
#X obj 66 263 +~;
#X obj 96 263 -~;
#X obj 111 368 *~ 0.5;
#X obj 96 393 +~;
#X obj 126 393 -~;
#X obj 141 498 *~ 0.5;
#X obj 126 523 +~;
#X obj 156 523 -~;
#X obj 156 605 outlet~;
#X text 95 28 freeverb's diffusor;
#X obj 156 576 hip~ 5;
#X floatatom 214 70 5 0 0 0 - - -, f 5;
#X floatatom 246 203 5 0 0 0 - - -, f 5;
#X floatatom 280 334 5 0 0 0 - - -, f 5;
#X floatatom 304 464 5 0 0 0 - - -, f 5;
#X obj 51 53 r \$0-allpass1left;
#X obj 51 80 delread~ \$0-allpass1left;
#X obj 36 158 delwrite~ \$0-allpass1left 40;
#X obj 81 186 r \$0-allpass2left;
#X obj 81 211 delread~ \$0-allpass2left;
#X obj 66 290 delwrite~ \$0-allpass2left 40;
#X obj 111 317 r \$0-allpass3left;
#X obj 111 341 delread~ \$0-allpass3left;
#X obj 96 420 delwrite~ \$0-allpass3left 40;
#X obj 141 447 r \$0-allpass4left;
#X obj 141 471 delread~ \$0-allpass4left;
#X obj 126 550 delwrite~ \$0-allpass4left 40;
#X connect 0 0 1 1;
#X connect 1 0 22 0;
#X connect 2 0 5 0;
#X connect 2 0 6 1;
#X connect 3 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 5 1;
#X connect 5 0 25 0;
#X connect 6 0 8 0;
#X connect 6 0 9 1;
#X connect 7 0 8 1;
#X connect 8 0 28 0;
#X connect 9 0 11 0;
#X connect 9 0 12 1;
#X connect 10 0 11 1;
#X connect 11 0 31 0;
#X connect 12 0 15 0;
#X connect 15 0 13 0;
#X connect 20 0 16 0;
#X connect 20 0 21 0;
#X connect 21 0 0 0;
#X connect 21 0 2 0;
#X connect 23 0 17 0;
#X connect 23 0 24 0;
#X connect 24 0 4 0;
#X connect 24 0 6 0;
#X connect 26 0 18 0;
#X connect 26 0 27 0;
#X connect 27 0 7 0;
#X connect 27 0 9 0;
#X connect 29 0 19 0;
#X connect 29 0 30 0;
#X connect 30 0 10 0;
#X connect 30 0 12 0;
#X restore 39 209 pd diffusor-left;
#N canvas 312 366 778 367 combfilters-left2 0;
#X obj 46 244 +~;
#X obj 61 219 *~ 0.3;
#X obj 61 194 lop~ 1000;
#X obj 231 244 +~;
#X obj 246 219 *~ 0.3;
#X obj 246 194 lop~ 1000;
#X obj 429 218 *~ 0.3;
#X obj 429 193 lop~ 1000;
#X obj 414 241 +~;
#X obj 610 218 *~ 0.3;
#X obj 610 193 lop~ 1000;
#X obj 595 241 +~;
#X obj 112 170 r \$0-frequency;
#X obj 297 170 r \$0-frequency;
#X obj 480 167 r \$0-frequency;
#X obj 661 167 r \$0-frequency;
#X obj 46 28 inlet~;
#X obj 338 326 outlet~;
#X obj 61 90 r \$0-comb5left;
#X obj 61 141 delread~ \$0-comb5left;
#X obj 46 268 delwrite~ \$0-comb5left 100;
#X obj 246 90 r \$0-comb6left;
#X obj 246 142 delread~ \$0-comb6left;
#X obj 231 268 delwrite~ \$0-comb6left 100;
#X obj 429 88 r \$0-comb7left;
#X obj 429 141 delread~ \$0-comb7left;
#X obj 414 267 delwrite~ \$0-comb7left 100;
#X obj 610 89 r \$0-comb8left;
#X obj 610 141 delread~ \$0-comb8left;
#X obj 595 267 delwrite~ \$0-comb8left 100;
#X floatatom 70 116 5 0 0 0 - - -, f 5;
#X floatatom 261 118 5 0 0 0 - - -, f 5;
#X floatatom 440 117 5 0 0 0 - - -, f 5;
#X floatatom 620 116 5 0 0 0 - - -, f 5;
#X obj 279 58 clip 0 0.99;
#X obj 279 28 r \$0-room;
#X connect 0 0 20 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 23 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 26 0;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 29 0;
#X connect 12 0 2 1;
#X connect 13 0 5 1;
#X connect 14 0 7 1;
#X connect 15 0 10 1;
#X connect 16 0 0 0;
#X connect 16 0 3 0;
#X connect 16 0 8 0;
#X connect 16 0 11 0;
#X connect 18 0 19 0;
#X connect 18 0 30 0;
#X connect 19 0 2 0;
#X connect 19 0 17 0;
#X connect 21 0 22 0;
#X connect 21 0 31 0;
#X connect 22 0 5 0;
#X connect 22 0 17 0;
#X connect 24 0 25 0;
#X connect 24 0 32 0;
#X connect 25 0 7 0;
#X connect 25 0 17 0;
#X connect 27 0 28 0;
#X connect 27 0 33 0;
#X connect 28 0 10 0;
#X connect 28 0 17 0;
#X connect 34 0 1 1;
#X connect 34 0 4 1;
#X connect 34 0 6 1;
#X connect 34 0 9 1;
#X connect 35 0 34 0;
#X restore 60 175 pd combfilters-left2;
#N canvas 261 41 778 367 combfilters-right1 0;
#X obj 46 244 +~;
#X obj 61 219 *~ 0.3;
#X obj 61 194 lop~ 1000;
#X obj 231 244 +~;
#X obj 246 219 *~ 0.3;
#X obj 246 194 lop~ 1000;
#X obj 429 218 *~ 0.3;
#X obj 429 193 lop~ 1000;
#X obj 414 241 +~;
#X obj 610 218 *~ 0.3;
#X obj 610 193 lop~ 1000;
#X obj 595 241 +~;
#X obj 112 170 r \$0-frequency;
#X obj 297 170 r \$0-frequency;
#X obj 480 167 r \$0-frequency;
#X obj 661 167 r \$0-frequency;
#X obj 46 28 inlet~;
#X obj 338 326 outlet~;
#X floatatom 70 119 5 0 0 0 - - -, f 5;
#X floatatom 255 121 5 0 0 0 - - -, f 5;
#X floatatom 439 119 5 0 0 0 - - -, f 5;
#X floatatom 622 121 5 0 0 0 - - -, f 5;
#X obj 61 141 delread~ \$0-comb1right;
#X obj 246 142 delread~ \$0-comb2right;
#X obj 429 141 delread~ \$0-comb3right;
#X obj 610 141 delread~ \$0-comb4right;
#X obj 61 97 r \$0-comb1right;
#X obj 246 97 r \$0-comb2right;
#X obj 429 95 r \$0-comb3right;
#X obj 610 97 r \$0-comb4right;
#X obj 46 268 delwrite~ \$0-comb1right 100;
#X obj 231 268 delwrite~ \$0-comb2right 100;
#X obj 414 267 delwrite~ \$0-comb3right 100;
#X obj 595 267 delwrite~ \$0-comb4right 100;
#X obj 279 58 clip 0 0.99;
#X obj 279 28 r \$0-room;
#X connect 0 0 30 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 31 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 32 0;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 33 0;
#X connect 12 0 2 1;
#X connect 13 0 5 1;
#X connect 14 0 7 1;
#X connect 15 0 10 1;
#X connect 16 0 0 0;
#X connect 16 0 3 0;
#X connect 16 0 8 0;
#X connect 16 0 11 0;
#X connect 22 0 2 0;
#X connect 22 0 17 0;
#X connect 23 0 5 0;
#X connect 23 0 17 0;
#X connect 24 0 7 0;
#X connect 24 0 17 0;
#X connect 25 0 10 0;
#X connect 25 0 17 0;
#X connect 26 0 18 0;
#X connect 26 0 22 0;
#X connect 27 0 19 0;
#X connect 27 0 23 0;
#X connect 28 0 20 0;
#X connect 28 0 24 0;
#X connect 29 0 21 0;
#X connect 29 0 25 0;
#X connect 34 0 1 1;
#X connect 34 0 4 1;
#X connect 34 0 6 1;
#X connect 34 0 9 1;
#X connect 35 0 34 0;
#X restore 232 140 pd combfilters-right1;
#N canvas 312 366 778 367 combfilters-right2 0;
#X obj 46 244 +~;
#X obj 61 219 *~ 0.3;
#X obj 61 194 lop~ 1000;
#X obj 231 244 +~;
#X obj 246 219 *~ 0.3;
#X obj 246 194 lop~ 1000;
#X obj 429 218 *~ 0.3;
#X obj 429 193 lop~ 1000;
#X obj 414 241 +~;
#X obj 610 218 *~ 0.3;
#X obj 610 193 lop~ 1000;
#X obj 595 241 +~;
#X obj 112 170 r \$0-frequency;
#X obj 297 170 r \$0-frequency;
#X obj 480 167 r \$0-frequency;
#X obj 661 167 r \$0-frequency;
#X obj 46 28 inlet~;
#X obj 338 326 outlet~;
#X floatatom 70 116 5 0 0 0 - - -, f 5;
#X floatatom 261 118 5 0 0 0 - - -, f 5;
#X floatatom 440 117 5 0 0 0 - - -, f 5;
#X floatatom 620 116 5 0 0 0 - - -, f 5;
#X obj 279 58 clip 0 0.99;
#X obj 61 90 r \$0-comb5right;
#X obj 246 90 r \$0-comb6right;
#X obj 429 88 r \$0-comb7right;
#X obj 610 89 r \$0-comb8right;
#X obj 61 141 delread~ \$0-comb5right;
#X obj 246 142 delread~ \$0-comb6right;
#X obj 429 141 delread~ \$0-comb7right;
#X obj 610 141 delread~ \$0-comb8right;
#X obj 46 268 delwrite~ \$0-comb5right 100;
#X obj 231 268 delwrite~ \$0-comb6right 100;
#X obj 414 267 delwrite~ \$0-comb7right 100;
#X obj 595 267 delwrite~ \$0-comb8right 100;
#X obj 279 28 r \$0-room;
#X connect 0 0 31 0;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 32 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 33 0;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 34 0;
#X connect 12 0 2 1;
#X connect 13 0 5 1;
#X connect 14 0 7 1;
#X connect 15 0 10 1;
#X connect 16 0 0 0;
#X connect 16 0 3 0;
#X connect 16 0 8 0;
#X connect 16 0 11 0;
#X connect 22 0 1 1;
#X connect 22 0 4 1;
#X connect 22 0 6 1;
#X connect 22 0 9 1;
#X connect 23 0 18 0;
#X connect 23 0 27 0;
#X connect 24 0 19 0;
#X connect 24 0 28 0;
#X connect 25 0 20 0;
#X connect 25 0 29 0;
#X connect 26 0 21 0;
#X connect 26 0 30 0;
#X connect 27 0 2 0;
#X connect 27 0 17 0;
#X connect 28 0 5 0;
#X connect 28 0 17 0;
#X connect 29 0 7 0;
#X connect 29 0 17 0;
#X connect 30 0 10 0;
#X connect 30 0 17 0;
#X connect 35 0 22 0;
#X restore 249 174 pd combfilters-right2;
#N canvas 27 56 358 650 diffusor-right 0;
#X obj 51 107 *~ 0.5;
#X obj 36 132 +~;
#X obj 66 132 -~;
#X obj 36 26 inlet~;
#X obj 81 238 *~ 0.5;
#X obj 66 263 +~;
#X obj 96 263 -~;
#X obj 111 368 *~ 0.5;
#X obj 96 393 +~;
#X obj 126 393 -~;
#X obj 141 498 *~ 0.5;
#X obj 126 523 +~;
#X obj 156 523 -~;
#X obj 156 605 outlet~;
#X text 95 28 freeverb's diffusor;
#X obj 156 576 hip~ 5;
#X floatatom 214 70 5 0 0 0 - - -, f 5;
#X floatatom 244 203 5 0 0 0 - - -, f 5;
#X floatatom 280 334 5 0 0 0 - - -, f 5;
#X floatatom 304 464 5 0 0 0 - - -, f 5;
#X obj 51 53 r \$0-allpass1right;
#X obj 51 80 delread~ \$0-allpass1right;
#X obj 36 158 delwrite~ \$0-allpass1right 40;
#X obj 81 186 r \$0-allpass2right;
#X obj 81 211 delread~ \$0-allpass2right;
#X obj 66 290 delwrite~ \$0-allpass2right 40;
#X obj 111 317 r \$0-allpass3right;
#X obj 111 341 delread~ \$0-allpass3right;
#X obj 96 420 delwrite~ \$0-allpass3right 40;
#X obj 141 447 r \$0-allpass4right;
#X obj 141 471 delread~ \$0-allpass4right;
#X obj 126 550 delwrite~ \$0-allpass4right 40;
#X connect 0 0 1 1;
#X connect 1 0 22 0;
#X connect 2 0 5 0;
#X connect 2 0 6 1;
#X connect 3 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 5 1;
#X connect 5 0 25 0;
#X connect 6 0 8 0;
#X connect 6 0 9 1;
#X connect 7 0 8 1;
#X connect 8 0 28 0;
#X connect 9 0 11 0;
#X connect 9 0 12 1;
#X connect 10 0 11 1;
#X connect 11 0 31 0;
#X connect 12 0 15 0;
#X connect 15 0 13 0;
#X connect 20 0 16 0;
#X connect 20 0 21 0;
#X connect 21 0 0 0;
#X connect 21 0 2 0;
#X connect 23 0 17 0;
#X connect 23 0 24 0;
#X connect 24 0 4 0;
#X connect 24 0 6 0;
#X connect 26 0 18 0;
#X connect 26 0 27 0;
#X connect 27 0 7 0;
#X connect 27 0 9 0;
#X connect 29 0 19 0;
#X connect 29 0 30 0;
#X connect 30 0 10 0;
#X connect 30 0 12 0;
#X restore 232 210 pd diffusor-right;
#X obj 232 102 *~ 0.015;
#X obj 39 267 *~ 1;
#X obj 232 269 *~ 1;
#X obj 118 269 *~ 1;
#X obj 193 269 *~ 1;
#X obj 139 243 r \$0-dry;
#X obj 253 244 r \$0-wet;
#X obj 60 242 r \$0-wet;
#X obj 118 55 inlet~;
#X obj 232 55 inlet~;
#X obj 39 309 outlet~;
#X obj 193 310 outlet~;
#X obj 568 67 inlet;
#N canvas 0 23 207 207 room 0;
#X obj 32 35 inlet;
#X obj 32 63 * 0.28;
#X obj 32 94 + 0.7;
#X obj 32 160 outlet;
#X text 80 65 scaleroom;
#X text 76 94 offsetroom;
#X obj 47 126 s \$0-room;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 6 0;
#X restore 336 86 pd room;
#N canvas 684 169 244 376 frequency 0;
#X obj 60 222 samplerate~;
#X obj 33 8 inlet;
#X obj 33 194 t f b;
#X obj 33 249 *;
#X obj 53 303 s \$0-frequency;
#X obj 33 327 outlet;
#X obj 33 64 * 0.4;
#X text 76 66 scaledamp;
#X obj 33 38 clip 0 2;
#X obj 33 90 t b f;
#X obj 33 141 -;
#X msg 33 116 1;
#X obj 33 168 abs;
#X obj 33 275 * 0.5;
#X text 153 303 for [lop~];
#X connect 0 0 3 1;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 2 1 0 0;
#X connect 3 0 13 0;
#X connect 6 0 9 0;
#X connect 8 0 6 0;
#X connect 9 0 11 0;
#X connect 9 1 10 1;
#X connect 10 0 12 0;
#X connect 11 0 10 0;
#X connect 12 0 2 0;
#X connect 13 0 5 0;
#X connect 13 0 4 0;
#X restore 398 86 pd frequency;
#N canvas 0 23 170 187 scalewet 0;
#X obj 22 42 inlet;
#X obj 22 143 outlet;
#X obj 22 73 * 3;
#X text 49 74 scalewet;
#X obj 40 112 s \$0-wet;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 0 4 0;
#X restore 568 86 pd scalewet;
#N canvas 0 22 220 198 scaledry 0;
#X obj 32 74 * 2;
#X obj 32 40 inlet;
#X obj 32 141 outlet;
#X text 58 75 scaledry;
#X obj 41 105 s \$0-dry;
#X connect 0 0 2 0;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X restore 486 86 pd scaledry;
#X floatatom 336 106 5 0 0 0 - - -, f 5;
#X floatatom 398 106 10 0 0 0 - - -, f 10;
#X floatatom 486 106 5 0 0 0 - - -, f 5;
#X floatatom 568 105 5 0 0 0 - - -, f 5;
#N canvas 405 27 635 684 tuning 0;
#X msg 332 81 1139 \, 1211 \, 1300 \, 1379 \, 1445 \, 1514 \, 1580
\, 1640;
#X text 72 57 combfilter tunings left;
#X text 377 56 combfilter tunings right;
#X text 71 360 allpass tunings left;
#X text 383 355 allpass tunings right;
#N canvas 243 170 195 233 sampstoms 0;
#X obj 27 21 inlet;
#X obj 54 86 samplerate~;
#X obj 27 111 /;
#X obj 27 57 t f b;
#X obj 27 136 * 1000;
#X obj 27 162 outlet;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 1 0;
#X connect 4 0 5 0;
#X restore 30 107 pd sampstoms;
#X msg 30 82 1116 \, 1188 \, 1277 \, 1356 \, 1422 \, 1491 \, 1557 \,
1617;
#X obj 57 188 +;
#X msg 57 159 1;
#X obj 30 135 t f b;
#X obj 87 188 f;
#X obj 30 56 t b b;
#X msg 87 159 0;
#X obj 57 212 pack f \$0;
#X msg 57 238 \$2-comb\$1left;
#X obj 30 282 s;
#X obj 57 265 symbol;
#N canvas 0 22 195 233 sampstoms 0;
#X obj 27 21 inlet;
#X obj 54 86 samplerate~;
#X obj 27 111 /;
#X obj 27 57 t f b;
#X obj 27 136 * 1000;
#X obj 27 162 outlet;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 1 0;
#X connect 4 0 5 0;
#X restore 332 107 pd sampstoms;
#X obj 359 188 +;
#X msg 359 159 1;
#X obj 332 135 t f b;
#X obj 389 188 f;
#X msg 389 159 0;
#X obj 359 212 pack f \$0;
#X obj 332 282 s;
#X obj 359 265 symbol;
#X obj 332 56 t b b;
#X msg 359 238 \$2-comb\$1right;
#X obj 30 360 t b b;
#N canvas 0 22 195 233 sampstoms 0;
#X obj 27 21 inlet;
#X obj 54 86 samplerate~;
#X obj 27 111 /;
#X obj 27 57 t f b;
#X obj 27 136 * 1000;
#X obj 27 162 outlet;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 1 0;
#X connect 4 0 5 0;
#X restore 30 411 pd sampstoms;
#X obj 57 492 +;
#X msg 57 463 1;
#X obj 30 439 t f b;
#X obj 87 492 f;
#X msg 87 463 0;
#X obj 57 516 pack f \$0;
#X obj 30 586 s;
#X obj 57 569 symbol;
#X obj 334 356 t b b;
#N canvas 0 22 195 233 sampstoms 0;
#X obj 27 21 inlet;
#X obj 54 86 samplerate~;
#X obj 27 111 /;
#X obj 27 57 t f b;
#X obj 27 136 * 1000;
#X obj 27 162 outlet;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 1 0;
#X connect 4 0 5 0;
#X restore 334 407 pd sampstoms;
#X obj 361 488 +;
#X msg 361 459 1;
#X obj 334 435 t f b;
#X obj 391 488 f;
#X msg 391 459 0;
#X obj 361 512 pack f \$0;
#X obj 334 582 s;
#X obj 361 565 symbol;
#X obj 30 22 loadbang;
#X obj 332 27 loadbang;
#X obj 30 334 loadbang;
#X obj 334 331 loadbang;
#X obj 268 41 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 30 386 225 \, 556 \, 441 \, 341;
#X msg 334 380 248 \, 579 \, 464 \, 364;
#X msg 57 542 \$2-allpass\$1left;
#X msg 361 539 \$2-allpass\$1right;
#X text 27 624 Original Freeverb delay line lengths are converted to
milliseconds \, based on samplerate.;
#X connect 0 0 17 0;
#X connect 5 0 9 0;
#X connect 6 0 5 0;
#X connect 7 0 10 0;
#X connect 7 0 13 0;
#X connect 8 0 7 0;
#X connect 9 0 15 0;
#X connect 9 1 8 0;
#X connect 10 0 7 1;
#X connect 11 0 6 0;
#X connect 11 1 12 0;
#X connect 12 0 10 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 16 0 15 1;
#X connect 17 0 20 0;
#X connect 18 0 21 0;
#X connect 18 0 23 0;
#X connect 19 0 18 0;
#X connect 20 0 24 0;
#X connect 20 1 19 0;
#X connect 21 0 18 1;
#X connect 22 0 21 0;
#X connect 23 0 27 0;
#X connect 25 0 24 1;
#X connect 26 0 0 0;
#X connect 26 1 22 0;
#X connect 27 0 25 0;
#X connect 28 0 53 0;
#X connect 28 1 34 0;
#X connect 29 0 32 0;
#X connect 30 0 33 0;
#X connect 30 0 35 0;
#X connect 31 0 30 0;
#X connect 32 0 36 0;
#X connect 32 1 31 0;
#X connect 33 0 30 1;
#X connect 34 0 33 0;
#X connect 35 0 55 0;
#X connect 37 0 36 1;
#X connect 38 0 54 0;
#X connect 38 1 44 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 40 0 45 0;
#X connect 41 0 40 0;
#X connect 42 0 46 0;
#X connect 42 1 41 0;
#X connect 43 0 40 1;
#X connect 44 0 43 0;
#X connect 45 0 56 0;
#X connect 47 0 46 1;
#X connect 48 0 11 0;
#X connect 49 0 26 0;
#X connect 50 0 28 0;
#X connect 51 0 38 0;
#X connect 52 0 11 0;
#X connect 52 0 28 0;
#X connect 52 0 26 0;
#X connect 52 0 38 0;
#X connect 53 0 29 0;
#X connect 54 0 39 0;
#X connect 55 0 37 0;
#X connect 56 0 47 0;
#X restore 434 182 pd tuning;
#X msg 486 66 0;
#X msg 398 66 0;
#X msg 336 65 1;
#X obj 336 42 loadbang;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 3 0;
#X connect 6 0 0 0;
#X connect 6 0 4 0;
#X connect 6 0 2 0;
#X connect 7 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 16 0;
#X connect 10 0 17 0;
#X connect 11 0 10 1;
#X connect 11 0 9 1;
#X connect 12 0 8 1;
#X connect 13 0 7 1;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 15 0 6 0;
#X connect 15 0 10 0;
#X connect 18 0 21 0;
#X connect 19 0 23 0;
#X connect 20 0 24 0;
#X connect 21 0 26 0;
#X connect 22 0 25 0;
#X connect 28 0 22 0;
#X connect 29 0 20 0;
#X connect 30 0 19 0;
#X connect 31 0 30 0;
#X connect 31 0 29 0;
#X connect 31 0 28 0;
#X restore 103 115 pd vfreeverb~;
#X obj 103 135 hip~ 200;
#X obj 38 188 +~;
#X obj 38 209 s~ chordMixVerbed;
#X obj 178 50 r verbWetAmt;
#X text 191 115 <-- Freeverb \, by Katja Vetter May 2012;
#X msg 191 80 0;
#X obj 220 80 loadbang;
#X text 280 79 <-- sets wet mix to 0 at startup;
#X obj 38 42 r~ chordMixTreated;
#X text 260 49 <-- receives ramps to wet values from verbReader;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 2;
#X connect 6 0 0 2;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X connect 9 0 2 0;
#X restore 34 561 pd chordVerb;
#X text 126 683 <-- chords are sent through automated delay;
#X text 126 619 <-- determine whether chord delay should be zero \,
mild \, or heavy \, and send out regular triggers;
#N canvas 381 178 595 187 delayReader 0;
#X text 185 108 <-- reads values from the high-level 'sequence' table
(the sequences written in the header of each song);
#X text 181 48 <-- reads values from the low-level 'pattern' table
(the sequences written in each section);
#N canvas 266 45 667 539 delayPatternReader 0;
#X obj 49 115 int 0;
#X obj 87 115 + 1;
#X obj 49 155 mod \$1;
#X obj 93 155 list length;
#X obj 105 94 r sectionOver;
#X msg 76 94 0;
#X obj 49 52 r clap;
#X text 196 103 <-- main counter \, resets at the end of each section
;
#X text 174 362 <-- on each clap \, sends out one of the envelopes
above \, according to the sequence written in the section message.
;
#X obj 167 155 r delayPattern;
#X obj 49 206 tabread delayPatternTable;
#X obj 49 363 s delayWetEnvelope;
#X text 207 205 <-- reads the pattern stated in a section header (from
the delayPattern table) \, outputting the value located at the index
number sent in from the counter above;
#X text 260 154 <-- sets the loop for the counter to the same length
as the delayPattern list \, so that list will be repeated whatever
its length;
#X text 99 50 <-- the clap ultimately triggers zero \, mild \, or heavy
delay.;
#X msg 49 272 0 3;
#X msg 68 303 0 3 \, 0.7 30 250 \, 0 500 603;
#X obj 49 246 sel 0 1;
#X text 243 304 <-- 2 envelope types: no delay and delay \, with a
ramp/gate that silences delay on the onset of each chord \, fades it
in at the same rate as the delay itself \, then fades out after the
first flush of echo;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 1 0 0 1;
#X connect 2 0 10 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X connect 6 0 0 0;
#X connect 9 0 3 0;
#X connect 10 0 17 0;
#X connect 15 0 11 0;
#X connect 16 0 11 0;
#X connect 17 0 15 0;
#X connect 17 1 16 0;
#X restore 37 50 pd delayPatternReader;
#N canvas 361 142 643 568 delaySequenceReader 0;
#X obj 35 329 spigot;
#X obj 106 187 + 1;
#X msg 95 167 0;
#X obj 68 187 int 0;
#X obj 124 167 r songOver;
#X obj 68 55 r sectionOver;
#X obj 125 287 * -1;
#X obj 125 307 + 1;
#X obj 92 330 spigot;
#X obj 79 287 r clap;
#X obj 77 134 r init3;
#X text 201 168 <-- resets the counter to 0 each time a songOver message
is received;
#X obj 68 102 del 1;
#X text 113 101 <-- resolves an issue where values were being output
from the table before the correct values could be sent in;
#X obj 35 32 r delayWetEnvelope;
#X obj 68 220 tabread delaySequenceTable;
#X text 241 217 <-- reads the high-level song pattern from the delaySequence
table \, and outputs the value located at the index number sent in
from the counter above;
#X text 159 58 <-- sends in a bang at the end of each section \, and
on startup (after the delaySequence table has been filled);
#X text 128 398 <-- sends out an envelope to either increase \, decrease
\, or maintain the delay level \, as governed by all the stuff above
;
#X text 166 283 <-- if a '1' is received from the delaySequence table
\, the left spigot will allow the delayPattern through \, and the right
spigot will be closed. if a '0' is received \, the left spigot will
be closed \, and the right spigot will allow a '0 30' message to be
sent out on each clap.;
#X obj 35 369 vline~;
#X obj 35 398 s~ delayWetAmt;
#X msg 79 306 0 3;
#X connect 0 0 20 0;
#X connect 1 0 3 1;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 3 0 15 0;
#X connect 4 0 2 0;
#X connect 5 0 12 0;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 8 0 20 0;
#X connect 9 0 22 0;
#X connect 10 0 3 0;
#X connect 12 0 3 0;
#X connect 14 0 0 0;
#X connect 15 0 0 1;
#X connect 15 0 6 0;
#X connect 20 0 21 0;
#X connect 22 0 8 0;
#X restore 37 108 pd delaySequenceReader;
#X restore 34 619 pd delayReader;
#N canvas 340 144 180 247 sineMode 0;
#X obj 66 119 loadbang;
#X msg 36 119 0;
#X obj 29 159 vline~ 0;
#X msg 29 140 \$1 30;
#X text 25 23 SINE MODE: on/off;
#X obj 29 179 s~ sineRamp;
#X obj 56 78 r sineMode;
#X obj 29 58 r clap;
#X obj 29 78 int;
#X obj 29 99 change 0;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 6 0 8 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X restore 34 33 pd sineMode;
#X text 114 34 <-- switch on/off sine mode;
#N canvas 313 80 281 295 sineChordsEnveloping 0;
#X obj 46 57 r~ sineChords;
#X obj 46 209 s~ sineChordsEnveloped;
#X obj 78 86 r clap;
#X obj 78 145 vline~;
#X obj 46 181 *~;
#X msg 78 114 0 1 \, 1 10 1 \, 0 3000 11;
#X connect 0 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X restore 34 146 pd sineChordsEnveloping;
#X text 185 147 <-- make sine chords into a shape (for sine mode only)
;
#X restore 497 160 pd chords;
#N canvas 361 109 561 434 bass 0;
#N canvas 291 23 474 685 bassOsc 0;
#X obj 22 198 expr~ $v1 > 0.5;
#X obj 22 406 s~ sqBass;
#X obj 22 115 /~ 1;
#X text 19 16 BASS OSCILLATOR;
#X obj 22 254 *~ 0.5;
#X obj 22 304 -~ 0.25;
#X obj 22 64 r~ freq1;
#X text 105 162 <-- saw wave \, oscillates between 0-1;
#X text 127 198 <-- changed into square wave \, oscillates between
0-1;
#X text 71 253 <-- now oscillates between 0 and 0.5;
#X text 76 303 <-- now oscillates between -0.25 and 0.25;
#X obj 22 163 phasor~;
#X obj 64 115 r diveRamp;
#X text 135 115 <-- from bassDives module;
#X obj 25 501 r~ freq1;
#X obj 25 523 osc~;
#X obj 25 630 s~ sineBass;
#X obj 25 563 *~;
#X obj 22 366 *~;
#X obj 47 348 *~ -1;
#X obj 47 367 +~ 1;
#X obj 61 562 *~ 0.04;
#X obj 25 590 hip~ 50;
#X text 173 355 <-- gate for sine mode;
#X text 23 471 sine bass (for sine mode);
#X obj 86 348 r~ sineRamp;
#X obj 61 543 r~ sineRamp;
#X obj 25 610 lop~ 350;
#X connect 0 0 4 0;
#X connect 2 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 18 0;
#X connect 6 0 2 0;
#X connect 11 0 0 0;
#X connect 12 0 2 1;
#X connect 14 0 15 0;
#X connect 15 0 17 0;
#X connect 17 0 22 0;
#X connect 18 0 1 0;
#X connect 19 0 20 0;
#X connect 20 0 18 1;
#X connect 21 0 17 1;
#X connect 22 0 27 0;
#X connect 25 0 19 0;
#X connect 26 0 21 0;
#X connect 27 0 16 0;
#X restore 49 102 pd bassOsc;
#X text 121 103 <-- convert frequency to bass wave;
#N canvas 132 36 566 524 bassFiltering 0;
#X obj 31 321 r~ sqBass;
#X obj 95 340 r~ bigAdc3;
#X text 28 296 Wobble bass mix;
#X obj 31 400 s~ wobbleBass;
#X text 28 177 Attack bass mix;
#X obj 28 108 vline~;
#X obj 28 68 r clap;
#X obj 30 203 r~ sqBass;
#X obj 30 262 s~ attBass;
#X obj 30 243 vcf~ 1.5;
#X text 26 47 Bass attack envelope;
#X obj 27 128 s~ bassAttEnv;
#X obj 76 224 r~ bassAttEnv;
#X obj 31 359 vcf~ 3;
#X text 27 15 BASS FILTERING;
#X msg 28 88 0 1 \, 2000 100 1 \, 120 200 101 \, 0 200 301;
#X obj 330 270 r~ wobbleBass;
#X text 313 197 Master bass mix;
#X obj 314 228 r~ attBass;
#X obj 330 309 *~;
#X obj 330 290 *~ 0.95;
#X obj 315 331 +~;
#X obj 47 340 *~ 1000;
#X obj 315 248 *~ 0.5;
#X obj 314 74 r clap;
#X obj 314 115 vline~;
#X msg 314 94 0 5 \, 1 250 250;
#X obj 31 380 *~ 0.5;
#X obj 30 224 *~ 0.5;
#X text 312 50 Bass sustain amp envelope;
#X obj 314 134 s~ bassSusAEnvelope;
#X obj 355 309 r~ bassSusAEnvelope;
#X obj 315 353 s~ bassMix;
#X connect 0 0 13 0;
#X connect 1 0 22 0;
#X connect 5 0 11 0;
#X connect 6 0 15 0;
#X connect 7 0 28 0;
#X connect 9 0 8 0;
#X connect 12 0 9 1;
#X connect 13 0 27 0;
#X connect 15 0 5 0;
#X connect 16 0 20 0;
#X connect 18 0 23 0;
#X connect 19 0 21 1;
#X connect 20 0 19 0;
#X connect 21 0 32 0;
#X connect 22 0 13 1;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 30 0;
#X connect 26 0 25 0;
#X connect 27 0 3 0;
#X connect 28 0 9 0;
#X connect 31 0 19 1;
#X restore 49 200 pd bassFiltering;
#X text 160 201 <-- filter and mix bass waves;
#N canvas 177 33 476 636 bassDives 0;
#X obj 34 538 s diveRamp;
#X obj 34 518 line 0 5;
#X obj 34 499 r bassLine;
#X obj 34 391 s bassLine;
#X msg 34 371 1;
#X obj 73 192 list length;
#X obj 30 192 mod \$1;
#X obj 30 169 int 0;
#X obj 68 169 + 1;
#X obj 86 146 r sectionOver;
#X msg 57 146 0;
#X obj 30 124 r clap;
#X obj 30 242 s diveTrigger;
#X obj 34 330 r diveTrigger;
#X obj 163 330 r diveTrigger;
#X text 161 302 Dive 1;
#X obj 275 327 r diveTrigger;
#X text 273 302 Dive 2;
#X text 31 303 Dive 0 (no dive);
#X obj 194 368 del 500;
#X msg 194 388 2 1000;
#X msg 163 388 1;
#X obj 163 409 s bassLine;
#X obj 314 369 del 20;
#X obj 359 369 del 500;
#X msg 359 388 1 1000;
#X msg 275 388 1 20;
#X msg 314 388 2 200;
#X obj 275 410 s bassLine;
#X text 33 472 Ramp creator;
#X text 28 39 NOTE: the diveSequence table is automatically cleared
at the end of every section \, in the chordSequencer module.;
#X text 28 91 dive distributor;
#X obj 163 349 sel 1;
#X obj 275 346 sel 2;
#X obj 34 350 sel 0;
#X obj 146 192 r chordSequence;
#X obj 30 215 tabread divesTable;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 6 1;
#X connect 6 0 36 0;
#X connect 7 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 7 1;
#X connect 9 0 10 0;
#X connect 10 0 7 1;
#X connect 11 0 7 0;
#X connect 13 0 34 0;
#X connect 14 0 32 0;
#X connect 16 0 33 0;
#X connect 19 0 20 0;
#X connect 20 0 22 0;
#X connect 21 0 22 0;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 25 0 28 0;
#X connect 26 0 28 0;
#X connect 27 0 28 0;
#X connect 32 0 19 0;
#X connect 32 0 21 0;
#X connect 33 0 26 0;
#X connect 33 0 23 0;
#X connect 33 0 24 0;
#X connect 34 0 4 0;
#X connect 35 0 5 0;
#X connect 36 0 12 0;
#X restore 49 56 pd bassDives;
#X text 134 57 <-- manipulate bass frequency;
#X text 168 296 <-- pause the bass as directed in song arrangements
;
#N canvas 340 30 461 647 autoTrem 0;
#X obj 120 133 *~;
#X obj 66 552 +~;
#X obj 96 404 vline~;
#X obj 81 515 *~;
#X obj 65 438 -~ 1;
#X obj 65 459 *~ -1;
#X obj 66 493 *~;
#X obj 134 71 osc~ 2;
#X text 35 44 Splitter;
#X obj 96 258 r clap;
#X msg 153 382 0 100;
#X obj 96 363 del 750;
#X text 35 18 Auto tremolo;
#X msg 96 383 1 250;
#X obj 37 153 s~ sigNoTrem;
#X obj 120 153 s~ sigTrem;
#X obj 91 494 r~ sigNoTrem;
#X obj 108 515 r~ sigTrem;
#X text 35 193 Auto-crossfade for tremolo signal;
#X obj 96 299 mod 4;
#X obj 96 319 == 3;
#X obj 96 340 sel 1;
#X obj 96 278 int;
#X obj 122 279 + 1;
#X obj 134 92 *~ 0.3;
#X obj 135 112 +~ 1;
#X text 34 218 Rule: On each 4th chord \, briefly transition into trem
bass and transition back out again;
#X obj 37 72 r~ bassMix;
#X obj 66 586 s~ tremBass;
#X connect 0 0 15 0;
#X connect 1 0 28 0;
#X connect 2 0 4 0;
#X connect 2 0 3 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X connect 7 0 24 0;
#X connect 9 0 22 0;
#X connect 10 0 2 0;
#X connect 11 0 13 0;
#X connect 13 0 2 0;
#X connect 16 0 6 0;
#X connect 17 0 3 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 11 0;
#X connect 21 1 10 0;
#X connect 22 0 23 0;
#X connect 22 0 19 0;
#X connect 23 0 22 1;
#X connect 24 0 25 0;
#X connect 25 0 0 1;
#X connect 27 0 0 0;
#X connect 27 0 14 0;
#X restore 49 247 pd autoTrem;
#X text 127 248 <-- auto-tremolo for bass;
#N canvas 125 113 596 344 filterRolloff 0;
#X obj 52 153 vline~;
#X obj 36 174 vcf~ 1;
#X msg 52 129 250 1 \, 2000 2000 500;
#X obj 52 63 r wobbleOnOff;
#X msg 71 105 250 1;
#X text 140 63 <-- trigger arrives here on every clap;
#X obj 52 83 sel 0 1;
#X text 188 128 <-- if chord wobble is off \, envelope gradually rolls
filter off bass on every chord;
#X text 113 104 <-- if chord wobble is on \, straight bass;
#X obj 36 38 r~ tremBass;
#X obj 36 264 s~ rollOffBass;
#X obj 36 226 +~;
#X text 193 226 <-- flat bass for sine mode;
#X obj 62 226 r~ sineBassEnveloped;
#X connect 0 0 1 1;
#X connect 1 0 11 0;
#X connect 2 0 0 0;
#X connect 3 0 6 0;
#X connect 4 0 0 0;
#X connect 6 0 2 0;
#X connect 6 1 4 0;
#X connect 9 0 1 0;
#X connect 11 0 10 0;
#X connect 13 0 11 1;
#X restore 49 343 pd filterRolloff;
#X text 163 342 <-- low-pass filter is gradually rolled off the bass
with each clap \, except during chord wobbling;
#N canvas 448 444 595 187 bassPauseReader 0;
#X text 208 108 <-- reads values from the high-level 'sequence' table
(the sequences written in the header of each song);
#X text 204 51 <-- reads values from the low-level 'pattern' table
(the sequences written in each section);
#N canvas 266 45 667 429 bassPausePatternReader 0;
#X obj 49 125 int 0;
#X obj 87 125 + 1;
#X obj 49 165 mod \$1;
#X obj 93 165 list length;
#X obj 105 104 r sectionOver;
#X msg 76 104 0;
#X obj 49 52 r clap;
#X text 196 113 <-- main counter \, resets at the end of each section
;
#X text 99 50 <-- the clap ultimately triggers '0' (no pause) or '1'
(pause).;
#X text 289 165 <-- sets the loop for the counter to the same length
as the bassPausePattern list \, so that list will be repeated whatever
its length;
#X text 245 226 <-- reads the pattern stated in a section header (from
the bassPausePattern table) \, outputting the value located at the
index number sent in from the counter above;
#X text 173 298 <-- on each clap \, sends out a 1 or 0 \, according
to given sequence.;
#X obj 167 165 r bassPausePattern;
#X obj 49 226 tabread bassPausePatternTable;
#X obj 49 298 s bassPauseTrigger;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 1 0 0 1;
#X connect 2 0 13 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X connect 6 0 0 0;
#X connect 12 0 3 0;
#X connect 13 0 14 0;
#X restore 37 50 pd bassPausePatternReader;
#N canvas 361 142 643 545 bassPauseSequenceReader 0;
#X obj 35 319 spigot;
#X obj 106 187 + 1;
#X msg 95 167 0;
#X obj 68 187 int 0;
#X obj 124 167 r songOver;
#X obj 68 55 r sectionOver;
#X obj 125 277 * -1;
#X obj 125 297 + 1;
#X obj 92 320 spigot;
#X obj 79 277 r clap;
#X obj 77 134 r init3;
#X text 201 168 <-- resets the counter to 0 each time a songOver message
is received;
#X obj 68 102 del 1;
#X text 113 102 <-- resolves an issue where values were being output
from the table before the correct values could be sent in;
#X obj 35 32 r bassPauseTrigger;
#X text 159 59 <-- sends in a bang at the end of each section \, and
on startup (after the bassPauseSequence table has been filled);
#X text 260 218 <-- reads the high-level song pattern from the bassPauseSequence
table \, and outputs the value located at the index number sent in
from the counter above;
#X text 166 273 <-- if a '1' is received from the bassPauseSequence
table \, the left spigot will allow the bassPausePattern through \,
and the right spigot will be closed. if a '0' is received \, the left
spigot will be closed \, and the right spigot will allow a '0' message
to be sent out on each clap.;
#X msg 79 296 0;
#X obj 68 220 tabread bassPauseSequenceTable;
#X obj 126 404 loadbang;
#X msg 97 404 0;
#X text 88 362 <-- creates a 30ms ramp to either 0 or 1;
#X text 201 439 <-- sends appropriate multiplier to chords and bass
mix;
#X obj 35 374 vline~;
#X obj 35 437 *~ -1;
#X obj 97 437 +~ 1;
#X obj 35 459 +~ 1;
#X obj 97 459 s~ boostChords;
#X obj 35 495 s~ pauseBass;
#X msg 35 354 \$1 30;
#X connect 0 0 30 0;
#X connect 1 0 3 1;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 3 0 19 0;
#X connect 4 0 2 0;
#X connect 5 0 12 0;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 8 0 30 0;
#X connect 9 0 18 0;
#X connect 10 0 3 0;
#X connect 12 0 3 0;
#X connect 14 0 0 0;
#X connect 18 0 8 0;
#X connect 19 0 0 1;
#X connect 19 0 6 0;
#X connect 20 0 21 0;
#X connect 21 0 25 0;
#X connect 21 0 26 0;
#X connect 24 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 28 0;
#X connect 27 0 29 0;
#X connect 30 0 24 0;
#X restore 37 108 pd bassPauseSequenceReader;
#X restore 49 295 pd bassPauseReader;
#N canvas 308 123 255 264 sineBassEnveloping 0;
#X obj 63 67 r clap;
#X obj 63 126 vline~;
#X obj 31 162 *~;
#X msg 63 95 0 1 \, 1 10 1 \, 0 3000 11;
#X obj 31 38 r~ sineBass;
#X obj 31 190 s~ sineBassEnveloped;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 1 0;
#X connect 4 0 2 0;
#X restore 48 152 pd sineBassEnveloping;
#X text 188 152 <-- make sine bass into a shape \, for sine mode only
;
#X restore 497 190 pd bass;
#X text 564 160 <-- all modules for managing chords;
#X text 550 189 <-- all modules for managing bass;
#X text 598 308 <-- set master level and test for clipping;
